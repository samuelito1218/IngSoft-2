generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type PedidosDireccionEntrega {
  barrio              String
  comuna              Int
  direccionEspecifica String
}

type PedidosProductos {
  cantidad   Int
  productoId String @db.ObjectId
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model Restaurantes {
  id          String                      @id @default(auto()) @map("_id") @db.ObjectId
  nombre      String
  ubicaciones RestaurantesUbicaciones[]
}

type RestaurantesUbicaciones {
  sucursal_Id String @db.ObjectId
  comuna      String
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model Mensajes {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  pedido_Id       String   @db.ObjectId
  usuarioEmisor   String   @db.ObjectId
  usuarioReceptor String   @db.ObjectId
  texto           String
  fechaEnvio      DateTime @db.Date
  leido      Boolean  @default(false)
}

type UbicacionRepartidor {
  lat         Float   @db.Double
  lng         Float   @db.Double
  heading     Float?  @db.Double
  timestamp   DateTime @db.Date
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model Pedidos {
  id               String                  @id @default(auto()) @map("_id") @db.ObjectId
  estado           EstadoPedido
  total            Float                   @db.Double
  usuario_id       String                  @db.ObjectId
  direccionEntrega PedidosDireccionEntrega
  repartidor_Id    String?                  @db.ObjectId
  fechaDeCreacion  DateTime                @db.Date
  productos        PedidosProductos[]
  mensajes         String[]                @db.ObjectId // Correcto como array de ObjectIds
  calificaciones  Calificaciones[]
  UbicacionRepartidor UbicacionRepartidor?
}

enum EstadoPedido {
  Pendiente
  En_Camino
  Entregado
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model Productos {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  especificaciones String
  nombre           String
  precio           Int
  restaurante_Id   String @db.ObjectId
}

/// This collection uses a JSON Schema defined in the database, which requires additional setup for migrations. Visit https://pris.ly/d/mongodb-json-schema for more info.
model Usuarios {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  nombreCompleto      String
  email               String    @unique
  contrase_a          String
  telefono            Int
  cedula              Int
  direccion           String
  rol                 String
  vehiculo            String?
  historialDirecciones HistorialDireccion[]
  resetToken          String?   @db.String
  resetTokenExpiry    String?   @db.String
}

type HistorialDireccion {
  comuna              Int
  barrio              String
  direccionEspecifica String
}

model Calificaciones {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  calificacionRepartidor Int      @db.Int
  calificacionPedido     Int      @db.Int
  comentarios            String?  // Comentario opcional
  pedidoId               String   @db.ObjectId

  pedido                 Pedidos  @relation(fields: [pedidoId], references: [id])
}

