
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model HistorialDireccion
 * 
 */
export type HistorialDireccion = $Result.DefaultSelection<Prisma.$HistorialDireccionPayload>
/**
 * Model ProductoPedido
 * 
 */
export type ProductoPedido = $Result.DefaultSelection<Prisma.$ProductoPedidoPayload>
/**
 * Model Ubicacion
 * 
 */
export type Ubicacion = $Result.DefaultSelection<Prisma.$UbicacionPayload>
/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Pedido
 * 
 */
export type Pedido = $Result.DefaultSelection<Prisma.$PedidoPayload>
/**
 * Model Restaurante
 * 
 */
export type Restaurante = $Result.DefaultSelection<Prisma.$RestaurantePayload>
/**
 * Model Producto
 * 
 */
export type Producto = $Result.DefaultSelection<Prisma.$ProductoPayload>
/**
 * Model Calificacion
 * 
 */
export type Calificacion = $Result.DefaultSelection<Prisma.$CalificacionPayload>
/**
 * Model Mensaje
 * 
 */
export type Mensaje = $Result.DefaultSelection<Prisma.$MensajePayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P]): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number }): $Utils.JsPromise<R>

  /**
   * Executes a raw MongoDB command and returns the result of it.
   * @example
   * ```
   * const user = await prisma.$runCommandRaw({
   *   aggregate: 'User',
   *   pipeline: [{ $match: { name: 'Bob' } }, { $project: { email: true, _id: false } }],
   *   explain: false,
   * })
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $runCommandRaw(command: Prisma.InputJsonObject): Prisma.PrismaPromise<Prisma.JsonObject>

  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pedido`: Exposes CRUD operations for the **Pedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pedidos
    * const pedidos = await prisma.pedido.findMany()
    * ```
    */
  get pedido(): Prisma.PedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.restaurante`: Exposes CRUD operations for the **Restaurante** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Restaurantes
    * const restaurantes = await prisma.restaurante.findMany()
    * ```
    */
  get restaurante(): Prisma.RestauranteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.producto`: Exposes CRUD operations for the **Producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.producto.findMany()
    * ```
    */
  get producto(): Prisma.ProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.calificacion`: Exposes CRUD operations for the **Calificacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Calificacions
    * const calificacions = await prisma.calificacion.findMany()
    * ```
    */
  get calificacion(): Prisma.CalificacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mensaje`: Exposes CRUD operations for the **Mensaje** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mensajes
    * const mensajes = await prisma.mensaje.findMany()
    * ```
    */
  get mensaje(): Prisma.MensajeDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Pedido: 'Pedido',
    Restaurante: 'Restaurante',
    Producto: 'Producto',
    Calificacion: 'Calificacion',
    Mensaje: 'Mensaje'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "pedido" | "restaurante" | "producto" | "calificacion" | "mensaje"
      txIsolationLevel: never
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.UsuarioFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.UsuarioAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Pedido: {
        payload: Prisma.$PedidoPayload<ExtArgs>
        fields: Prisma.PedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findFirst: {
            args: Prisma.PedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findMany: {
            args: Prisma.PedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          create: {
            args: Prisma.PedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          createMany: {
            args: Prisma.PedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          update: {
            args: Prisma.PedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          deleteMany: {
            args: Prisma.PedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          aggregate: {
            args: Prisma.PedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedido>
          }
          groupBy: {
            args: Prisma.PedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PedidoGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.PedidoFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.PedidoAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.PedidoCountArgs<ExtArgs>
            result: $Utils.Optional<PedidoCountAggregateOutputType> | number
          }
        }
      }
      Restaurante: {
        payload: Prisma.$RestaurantePayload<ExtArgs>
        fields: Prisma.RestauranteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RestauranteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RestaurantePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RestauranteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RestaurantePayload>
          }
          findFirst: {
            args: Prisma.RestauranteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RestaurantePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RestauranteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RestaurantePayload>
          }
          findMany: {
            args: Prisma.RestauranteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RestaurantePayload>[]
          }
          create: {
            args: Prisma.RestauranteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RestaurantePayload>
          }
          createMany: {
            args: Prisma.RestauranteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RestauranteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RestaurantePayload>
          }
          update: {
            args: Prisma.RestauranteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RestaurantePayload>
          }
          deleteMany: {
            args: Prisma.RestauranteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RestauranteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RestauranteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RestaurantePayload>
          }
          aggregate: {
            args: Prisma.RestauranteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRestaurante>
          }
          groupBy: {
            args: Prisma.RestauranteGroupByArgs<ExtArgs>
            result: $Utils.Optional<RestauranteGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.RestauranteFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.RestauranteAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.RestauranteCountArgs<ExtArgs>
            result: $Utils.Optional<RestauranteCountAggregateOutputType> | number
          }
        }
      }
      Producto: {
        payload: Prisma.$ProductoPayload<ExtArgs>
        fields: Prisma.ProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findFirst: {
            args: Prisma.ProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findMany: {
            args: Prisma.ProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          create: {
            args: Prisma.ProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          createMany: {
            args: Prisma.ProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          update: {
            args: Prisma.ProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          deleteMany: {
            args: Prisma.ProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          aggregate: {
            args: Prisma.ProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto>
          }
          groupBy: {
            args: Prisma.ProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.ProductoFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.ProductoAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.ProductoCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoCountAggregateOutputType> | number
          }
        }
      }
      Calificacion: {
        payload: Prisma.$CalificacionPayload<ExtArgs>
        fields: Prisma.CalificacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CalificacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CalificacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          findFirst: {
            args: Prisma.CalificacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CalificacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          findMany: {
            args: Prisma.CalificacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>[]
          }
          create: {
            args: Prisma.CalificacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          createMany: {
            args: Prisma.CalificacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CalificacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          update: {
            args: Prisma.CalificacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          deleteMany: {
            args: Prisma.CalificacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CalificacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CalificacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionPayload>
          }
          aggregate: {
            args: Prisma.CalificacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCalificacion>
          }
          groupBy: {
            args: Prisma.CalificacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CalificacionGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.CalificacionFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.CalificacionAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.CalificacionCountArgs<ExtArgs>
            result: $Utils.Optional<CalificacionCountAggregateOutputType> | number
          }
        }
      }
      Mensaje: {
        payload: Prisma.$MensajePayload<ExtArgs>
        fields: Prisma.MensajeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MensajeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MensajeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          findFirst: {
            args: Prisma.MensajeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MensajeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          findMany: {
            args: Prisma.MensajeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>[]
          }
          create: {
            args: Prisma.MensajeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          createMany: {
            args: Prisma.MensajeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MensajeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          update: {
            args: Prisma.MensajeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          deleteMany: {
            args: Prisma.MensajeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MensajeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MensajeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajePayload>
          }
          aggregate: {
            args: Prisma.MensajeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMensaje>
          }
          groupBy: {
            args: Prisma.MensajeGroupByArgs<ExtArgs>
            result: $Utils.Optional<MensajeGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.MensajeFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.MensajeAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.MensajeCountArgs<ExtArgs>
            result: $Utils.Optional<MensajeCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $runCommandRaw: {
          args: Prisma.InputJsonObject,
          result: Prisma.JsonObject
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    pedido?: PedidoOmit
    restaurante?: RestauranteOmit
    producto?: ProductoOmit
    calificacion?: CalificacionOmit
    mensaje?: MensajeOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    pedidosCliente: number
    pedidosRepartidor: number
    mensajesEnviados: number
    mensajesRecibidos: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedidosCliente?: boolean | UsuarioCountOutputTypeCountPedidosClienteArgs
    pedidosRepartidor?: boolean | UsuarioCountOutputTypeCountPedidosRepartidorArgs
    mensajesEnviados?: boolean | UsuarioCountOutputTypeCountMensajesEnviadosArgs
    mensajesRecibidos?: boolean | UsuarioCountOutputTypeCountMensajesRecibidosArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountPedidosClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountPedidosRepartidorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountMensajesEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajeWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountMensajesRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajeWhereInput
  }


  /**
   * Count Type PedidoCountOutputType
   */

  export type PedidoCountOutputType = {
    mensajes: number
  }

  export type PedidoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mensajes?: boolean | PedidoCountOutputTypeCountMensajesArgs
  }

  // Custom InputTypes
  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCountOutputType
     */
    select?: PedidoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeCountMensajesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajeWhereInput
  }


  /**
   * Count Type RestauranteCountOutputType
   */

  export type RestauranteCountOutputType = {
    productos: number
  }

  export type RestauranteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | RestauranteCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * RestauranteCountOutputType without action
   */
  export type RestauranteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RestauranteCountOutputType
     */
    select?: RestauranteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RestauranteCountOutputType without action
   */
  export type RestauranteCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model HistorialDireccion
   */





  export type HistorialDireccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    comuna?: boolean
    barrio?: boolean
    direccionEspecifica?: boolean
  }, ExtArgs["result"]["historialDireccion"]>



  export type HistorialDireccionSelectScalar = {
    comuna?: boolean
    barrio?: boolean
    direccionEspecifica?: boolean
  }

  export type HistorialDireccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"comuna" | "barrio" | "direccionEspecifica", ExtArgs["result"]["historialDireccion"]>

  export type $HistorialDireccionPayload = {
    name: "HistorialDireccion"
    objects: {}
    scalars: {
      comuna: number
      barrio: string
      direccionEspecifica: string
    }
    composites: {}
  }

  type HistorialDireccionGetPayload<S extends boolean | null | undefined | HistorialDireccionDefaultArgs> = $Result.GetResult<Prisma.$HistorialDireccionPayload, S>





  /**
   * Fields of the HistorialDireccion model
   */
  interface HistorialDireccionFieldRefs {
    readonly comuna: FieldRef<"HistorialDireccion", 'Int'>
    readonly barrio: FieldRef<"HistorialDireccion", 'String'>
    readonly direccionEspecifica: FieldRef<"HistorialDireccion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * HistorialDireccion without action
   */
  export type HistorialDireccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialDireccion
     */
    select?: HistorialDireccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistorialDireccion
     */
    omit?: HistorialDireccionOmit<ExtArgs> | null
  }


  /**
   * Model ProductoPedido
   */





  export type ProductoPedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    productoId?: boolean
    cantidad?: boolean
  }, ExtArgs["result"]["productoPedido"]>



  export type ProductoPedidoSelectScalar = {
    productoId?: boolean
    cantidad?: boolean
  }

  export type ProductoPedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"productoId" | "cantidad", ExtArgs["result"]["productoPedido"]>

  export type $ProductoPedidoPayload = {
    name: "ProductoPedido"
    objects: {}
    scalars: {
      productoId: string
      cantidad: number
    }
    composites: {}
  }

  type ProductoPedidoGetPayload<S extends boolean | null | undefined | ProductoPedidoDefaultArgs> = $Result.GetResult<Prisma.$ProductoPedidoPayload, S>





  /**
   * Fields of the ProductoPedido model
   */
  interface ProductoPedidoFieldRefs {
    readonly productoId: FieldRef<"ProductoPedido", 'String'>
    readonly cantidad: FieldRef<"ProductoPedido", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ProductoPedido without action
   */
  export type ProductoPedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoPedido
     */
    select?: ProductoPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductoPedido
     */
    omit?: ProductoPedidoOmit<ExtArgs> | null
  }


  /**
   * Model Ubicacion
   */





  export type UbicacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sucursalId?: boolean
    comuna?: boolean
  }, ExtArgs["result"]["ubicacion"]>



  export type UbicacionSelectScalar = {
    sucursalId?: boolean
    comuna?: boolean
  }

  export type UbicacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sucursalId" | "comuna", ExtArgs["result"]["ubicacion"]>

  export type $UbicacionPayload = {
    name: "Ubicacion"
    objects: {}
    scalars: {
      sucursalId: string
      comuna: string
    }
    composites: {}
  }

  type UbicacionGetPayload<S extends boolean | null | undefined | UbicacionDefaultArgs> = $Result.GetResult<Prisma.$UbicacionPayload, S>





  /**
   * Fields of the Ubicacion model
   */
  interface UbicacionFieldRefs {
    readonly sucursalId: FieldRef<"Ubicacion", 'String'>
    readonly comuna: FieldRef<"Ubicacion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Ubicacion without action
   */
  export type UbicacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicacion
     */
    select?: UbicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicacion
     */
    omit?: UbicacionOmit<ExtArgs> | null
  }


  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    telefono: number | null
    cedula: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    telefono: number | null
    cedula: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: string | null
    nombreCompleto: string | null
    contraseña: string | null
    rol: string | null
    direccion: string | null
    telefono: number | null
    cedula: number | null
    email: string | null
    vehiculo: string | null
    resetToken: string | null
    resetTokenExpiry: string | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: string | null
    nombreCompleto: string | null
    contraseña: string | null
    rol: string | null
    direccion: string | null
    telefono: number | null
    cedula: number | null
    email: string | null
    vehiculo: string | null
    resetToken: string | null
    resetTokenExpiry: string | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nombreCompleto: number
    contraseña: number
    rol: number
    direccion: number
    telefono: number
    cedula: number
    email: number
    vehiculo: number
    resetToken: number
    resetTokenExpiry: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    telefono?: true
    cedula?: true
  }

  export type UsuarioSumAggregateInputType = {
    telefono?: true
    cedula?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nombreCompleto?: true
    contraseña?: true
    rol?: true
    direccion?: true
    telefono?: true
    cedula?: true
    email?: true
    vehiculo?: true
    resetToken?: true
    resetTokenExpiry?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nombreCompleto?: true
    contraseña?: true
    rol?: true
    direccion?: true
    telefono?: true
    cedula?: true
    email?: true
    vehiculo?: true
    resetToken?: true
    resetTokenExpiry?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nombreCompleto?: true
    contraseña?: true
    rol?: true
    direccion?: true
    telefono?: true
    cedula?: true
    email?: true
    vehiculo?: true
    resetToken?: true
    resetTokenExpiry?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo: string | null
    resetToken: string | null
    resetTokenExpiry: string | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombreCompleto?: boolean
    contraseña?: boolean
    rol?: boolean
    direccion?: boolean
    telefono?: boolean
    cedula?: boolean
    email?: boolean
    vehiculo?: boolean
    resetToken?: boolean
    resetTokenExpiry?: boolean
    historialDirecciones?: boolean | HistorialDireccionDefaultArgs<ExtArgs>
    pedidosCliente?: boolean | Usuario$pedidosClienteArgs<ExtArgs>
    pedidosRepartidor?: boolean | Usuario$pedidosRepartidorArgs<ExtArgs>
    mensajesEnviados?: boolean | Usuario$mensajesEnviadosArgs<ExtArgs>
    mensajesRecibidos?: boolean | Usuario$mensajesRecibidosArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>



  export type UsuarioSelectScalar = {
    id?: boolean
    nombreCompleto?: boolean
    contraseña?: boolean
    rol?: boolean
    direccion?: boolean
    telefono?: boolean
    cedula?: boolean
    email?: boolean
    vehiculo?: boolean
    resetToken?: boolean
    resetTokenExpiry?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombreCompleto" | "contraseña" | "rol" | "direccion" | "telefono" | "cedula" | "email" | "vehiculo" | "resetToken" | "resetTokenExpiry" | "historialDirecciones", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedidosCliente?: boolean | Usuario$pedidosClienteArgs<ExtArgs>
    pedidosRepartidor?: boolean | Usuario$pedidosRepartidorArgs<ExtArgs>
    mensajesEnviados?: boolean | Usuario$mensajesEnviadosArgs<ExtArgs>
    mensajesRecibidos?: boolean | Usuario$mensajesRecibidosArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      pedidosCliente: Prisma.$PedidoPayload<ExtArgs>[]
      pedidosRepartidor: Prisma.$PedidoPayload<ExtArgs>[]
      mensajesEnviados: Prisma.$MensajePayload<ExtArgs>[]
      mensajesRecibidos: Prisma.$MensajePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombreCompleto: string
      contraseña: string
      rol: string
      direccion: string
      telefono: number
      cedula: number
      email: string
      vehiculo: string | null
      resetToken: string | null
      resetTokenExpiry: string | null
    }, ExtArgs["result"]["usuario"]>
    composites: {
      historialDirecciones: Prisma.$HistorialDireccionPayload[]
    }
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * @param {UsuarioFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const usuario = await prisma.usuario.findRaw({
     *   filter: { age: { $gt: 25 } }
     * })
     */
    findRaw(args?: UsuarioFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a Usuario.
     * @param {UsuarioAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const usuario = await prisma.usuario.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: UsuarioAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedidosCliente<T extends Usuario$pedidosClienteArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$pedidosClienteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pedidosRepartidor<T extends Usuario$pedidosRepartidorArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$pedidosRepartidorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mensajesEnviados<T extends Usuario$mensajesEnviadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$mensajesEnviadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mensajesRecibidos<T extends Usuario$mensajesRecibidosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$mensajesRecibidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'String'>
    readonly nombreCompleto: FieldRef<"Usuario", 'String'>
    readonly contraseña: FieldRef<"Usuario", 'String'>
    readonly rol: FieldRef<"Usuario", 'String'>
    readonly direccion: FieldRef<"Usuario", 'String'>
    readonly telefono: FieldRef<"Usuario", 'Int'>
    readonly cedula: FieldRef<"Usuario", 'Int'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly vehiculo: FieldRef<"Usuario", 'String'>
    readonly resetToken: FieldRef<"Usuario", 'String'>
    readonly resetTokenExpiry: FieldRef<"Usuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario findRaw
   */
  export type UsuarioFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Usuario aggregateRaw
   */
  export type UsuarioAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Usuario.pedidosCliente
   */
  export type Usuario$pedidosClienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Usuario.pedidosRepartidor
   */
  export type Usuario$pedidosRepartidorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Usuario.mensajesEnviados
   */
  export type Usuario$mensajesEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    where?: MensajeWhereInput
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    cursor?: MensajeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Usuario.mensajesRecibidos
   */
  export type Usuario$mensajesRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    where?: MensajeWhereInput
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    cursor?: MensajeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Pedido
   */

  export type AggregatePedido = {
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  export type PedidoAvgAggregateOutputType = {
    total: number | null
  }

  export type PedidoSumAggregateOutputType = {
    total: number | null
  }

  export type PedidoMinAggregateOutputType = {
    id: string | null
    estado: string | null
    total: number | null
    usuarioId: string | null
    repartidorId: string | null
    fechaDeCreacion: Date | null
  }

  export type PedidoMaxAggregateOutputType = {
    id: string | null
    estado: string | null
    total: number | null
    usuarioId: string | null
    repartidorId: string | null
    fechaDeCreacion: Date | null
  }

  export type PedidoCountAggregateOutputType = {
    id: number
    estado: number
    total: number
    usuarioId: number
    direccionEntrega: number
    repartidorId: number
    fechaDeCreacion: number
    _all: number
  }


  export type PedidoAvgAggregateInputType = {
    total?: true
  }

  export type PedidoSumAggregateInputType = {
    total?: true
  }

  export type PedidoMinAggregateInputType = {
    id?: true
    estado?: true
    total?: true
    usuarioId?: true
    repartidorId?: true
    fechaDeCreacion?: true
  }

  export type PedidoMaxAggregateInputType = {
    id?: true
    estado?: true
    total?: true
    usuarioId?: true
    repartidorId?: true
    fechaDeCreacion?: true
  }

  export type PedidoCountAggregateInputType = {
    id?: true
    estado?: true
    total?: true
    usuarioId?: true
    direccionEntrega?: true
    repartidorId?: true
    fechaDeCreacion?: true
    _all?: true
  }

  export type PedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedido to aggregate.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pedidos
    **/
    _count?: true | PedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PedidoMaxAggregateInputType
  }

  export type GetPedidoAggregateType<T extends PedidoAggregateArgs> = {
        [P in keyof T & keyof AggregatePedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedido[P]>
      : GetScalarType<T[P], AggregatePedido[P]>
  }




  export type PedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithAggregationInput | PedidoOrderByWithAggregationInput[]
    by: PedidoScalarFieldEnum[] | PedidoScalarFieldEnum
    having?: PedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PedidoCountAggregateInputType | true
    _avg?: PedidoAvgAggregateInputType
    _sum?: PedidoSumAggregateInputType
    _min?: PedidoMinAggregateInputType
    _max?: PedidoMaxAggregateInputType
  }

  export type PedidoGroupByOutputType = {
    id: string
    estado: string
    total: number
    usuarioId: string
    direccionEntrega: JsonValue
    repartidorId: string
    fechaDeCreacion: Date
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  type GetPedidoGroupByPayload<T extends PedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PedidoGroupByOutputType[P]>
            : GetScalarType<T[P], PedidoGroupByOutputType[P]>
        }
      >
    >


  export type PedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estado?: boolean
    total?: boolean
    usuarioId?: boolean
    direccionEntrega?: boolean
    repartidorId?: boolean
    fechaDeCreacion?: boolean
    productos?: boolean | ProductoPedidoDefaultArgs<ExtArgs>
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    repartidor?: boolean | UsuarioDefaultArgs<ExtArgs>
    mensajes?: boolean | Pedido$mensajesArgs<ExtArgs>
    calificacion?: boolean | Pedido$calificacionArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>



  export type PedidoSelectScalar = {
    id?: boolean
    estado?: boolean
    total?: boolean
    usuarioId?: boolean
    direccionEntrega?: boolean
    repartidorId?: boolean
    fechaDeCreacion?: boolean
  }

  export type PedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "estado" | "total" | "usuarioId" | "direccionEntrega" | "repartidorId" | "fechaDeCreacion" | "productos", ExtArgs["result"]["pedido"]>
  export type PedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    repartidor?: boolean | UsuarioDefaultArgs<ExtArgs>
    mensajes?: boolean | Pedido$mensajesArgs<ExtArgs>
    calificacion?: boolean | Pedido$calificacionArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pedido"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      repartidor: Prisma.$UsuarioPayload<ExtArgs>
      mensajes: Prisma.$MensajePayload<ExtArgs>[]
      calificacion: Prisma.$CalificacionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      estado: string
      total: number
      usuarioId: string
      direccionEntrega: Prisma.JsonValue
      repartidorId: string
      fechaDeCreacion: Date
    }, ExtArgs["result"]["pedido"]>
    composites: {
      productos: Prisma.$ProductoPedidoPayload[]
    }
  }

  type PedidoGetPayload<S extends boolean | null | undefined | PedidoDefaultArgs> = $Result.GetResult<Prisma.$PedidoPayload, S>

  type PedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PedidoCountAggregateInputType | true
    }

  export interface PedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pedido'], meta: { name: 'Pedido' } }
    /**
     * Find zero or one Pedido that matches the filter.
     * @param {PedidoFindUniqueArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PedidoFindUniqueArgs>(args: SelectSubset<T, PedidoFindUniqueArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PedidoFindUniqueOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, PedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PedidoFindFirstArgs>(args?: SelectSubset<T, PedidoFindFirstArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, PedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pedidos
     * const pedidos = await prisma.pedido.findMany()
     * 
     * // Get first 10 Pedidos
     * const pedidos = await prisma.pedido.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pedidoWithIdOnly = await prisma.pedido.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PedidoFindManyArgs>(args?: SelectSubset<T, PedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pedido.
     * @param {PedidoCreateArgs} args - Arguments to create a Pedido.
     * @example
     * // Create one Pedido
     * const Pedido = await prisma.pedido.create({
     *   data: {
     *     // ... data to create a Pedido
     *   }
     * })
     * 
     */
    create<T extends PedidoCreateArgs>(args: SelectSubset<T, PedidoCreateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pedidos.
     * @param {PedidoCreateManyArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PedidoCreateManyArgs>(args?: SelectSubset<T, PedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pedido.
     * @param {PedidoDeleteArgs} args - Arguments to delete one Pedido.
     * @example
     * // Delete one Pedido
     * const Pedido = await prisma.pedido.delete({
     *   where: {
     *     // ... filter to delete one Pedido
     *   }
     * })
     * 
     */
    delete<T extends PedidoDeleteArgs>(args: SelectSubset<T, PedidoDeleteArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pedido.
     * @param {PedidoUpdateArgs} args - Arguments to update one Pedido.
     * @example
     * // Update one Pedido
     * const pedido = await prisma.pedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PedidoUpdateArgs>(args: SelectSubset<T, PedidoUpdateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pedidos.
     * @param {PedidoDeleteManyArgs} args - Arguments to filter Pedidos to delete.
     * @example
     * // Delete a few Pedidos
     * const { count } = await prisma.pedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PedidoDeleteManyArgs>(args?: SelectSubset<T, PedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PedidoUpdateManyArgs>(args: SelectSubset<T, PedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pedido.
     * @param {PedidoUpsertArgs} args - Arguments to update or create a Pedido.
     * @example
     * // Update or create a Pedido
     * const pedido = await prisma.pedido.upsert({
     *   create: {
     *     // ... data to create a Pedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pedido we want to update
     *   }
     * })
     */
    upsert<T extends PedidoUpsertArgs>(args: SelectSubset<T, PedidoUpsertArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pedidos that matches the filter.
     * @param {PedidoFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const pedido = await prisma.pedido.findRaw({
     *   filter: { age: { $gt: 25 } }
     * })
     */
    findRaw(args?: PedidoFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a Pedido.
     * @param {PedidoAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const pedido = await prisma.pedido.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: PedidoAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoCountArgs} args - Arguments to filter Pedidos to count.
     * @example
     * // Count the number of Pedidos
     * const count = await prisma.pedido.count({
     *   where: {
     *     // ... the filter for the Pedidos we want to count
     *   }
     * })
    **/
    count<T extends PedidoCountArgs>(
      args?: Subset<T, PedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PedidoAggregateArgs>(args: Subset<T, PedidoAggregateArgs>): Prisma.PrismaPromise<GetPedidoAggregateType<T>>

    /**
     * Group by Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PedidoGroupByArgs['orderBy'] }
        : { orderBy?: PedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pedido model
   */
  readonly fields: PedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    repartidor<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    mensajes<T extends Pedido$mensajesArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$mensajesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calificacion<T extends Pedido$calificacionArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$calificacionArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pedido model
   */
  interface PedidoFieldRefs {
    readonly id: FieldRef<"Pedido", 'String'>
    readonly estado: FieldRef<"Pedido", 'String'>
    readonly total: FieldRef<"Pedido", 'Float'>
    readonly usuarioId: FieldRef<"Pedido", 'String'>
    readonly direccionEntrega: FieldRef<"Pedido", 'Json'>
    readonly repartidorId: FieldRef<"Pedido", 'String'>
    readonly fechaDeCreacion: FieldRef<"Pedido", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pedido findUnique
   */
  export type PedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findUniqueOrThrow
   */
  export type PedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findFirst
   */
  export type PedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findFirstOrThrow
   */
  export type PedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findMany
   */
  export type PedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedidos to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido create
   */
  export type PedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pedido.
     */
    data: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
  }

  /**
   * Pedido createMany
   */
  export type PedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pedidos.
     */
    data: PedidoCreateManyInput | PedidoCreateManyInput[]
  }

  /**
   * Pedido update
   */
  export type PedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pedido.
     */
    data: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
    /**
     * Choose, which Pedido to update.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido updateMany
   */
  export type PedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pedidos.
     */
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyInput>
    /**
     * Filter which Pedidos to update
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to update.
     */
    limit?: number
  }

  /**
   * Pedido upsert
   */
  export type PedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pedido to update in case it exists.
     */
    where: PedidoWhereUniqueInput
    /**
     * In case the Pedido found by the `where` argument doesn't exist, create a new Pedido with this data.
     */
    create: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
    /**
     * In case the Pedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
  }

  /**
   * Pedido delete
   */
  export type PedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter which Pedido to delete.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido deleteMany
   */
  export type PedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedidos to delete
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to delete.
     */
    limit?: number
  }

  /**
   * Pedido findRaw
   */
  export type PedidoFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Pedido aggregateRaw
   */
  export type PedidoAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Pedido.mensajes
   */
  export type Pedido$mensajesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    where?: MensajeWhereInput
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    cursor?: MensajeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Pedido.calificacion
   */
  export type Pedido$calificacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    where?: CalificacionWhereInput
  }

  /**
   * Pedido without action
   */
  export type PedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
  }


  /**
   * Model Restaurante
   */

  export type AggregateRestaurante = {
    _count: RestauranteCountAggregateOutputType | null
    _min: RestauranteMinAggregateOutputType | null
    _max: RestauranteMaxAggregateOutputType | null
  }

  export type RestauranteMinAggregateOutputType = {
    id: string | null
    nombre: string | null
  }

  export type RestauranteMaxAggregateOutputType = {
    id: string | null
    nombre: string | null
  }

  export type RestauranteCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type RestauranteMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type RestauranteMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type RestauranteCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type RestauranteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Restaurante to aggregate.
     */
    where?: RestauranteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Restaurantes to fetch.
     */
    orderBy?: RestauranteOrderByWithRelationInput | RestauranteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RestauranteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Restaurantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Restaurantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Restaurantes
    **/
    _count?: true | RestauranteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RestauranteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RestauranteMaxAggregateInputType
  }

  export type GetRestauranteAggregateType<T extends RestauranteAggregateArgs> = {
        [P in keyof T & keyof AggregateRestaurante]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRestaurante[P]>
      : GetScalarType<T[P], AggregateRestaurante[P]>
  }




  export type RestauranteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RestauranteWhereInput
    orderBy?: RestauranteOrderByWithAggregationInput | RestauranteOrderByWithAggregationInput[]
    by: RestauranteScalarFieldEnum[] | RestauranteScalarFieldEnum
    having?: RestauranteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RestauranteCountAggregateInputType | true
    _min?: RestauranteMinAggregateInputType
    _max?: RestauranteMaxAggregateInputType
  }

  export type RestauranteGroupByOutputType = {
    id: string
    nombre: string
    _count: RestauranteCountAggregateOutputType | null
    _min: RestauranteMinAggregateOutputType | null
    _max: RestauranteMaxAggregateOutputType | null
  }

  type GetRestauranteGroupByPayload<T extends RestauranteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RestauranteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RestauranteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RestauranteGroupByOutputType[P]>
            : GetScalarType<T[P], RestauranteGroupByOutputType[P]>
        }
      >
    >


  export type RestauranteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    ubicaciones?: boolean | UbicacionDefaultArgs<ExtArgs>
    productos?: boolean | Restaurante$productosArgs<ExtArgs>
    _count?: boolean | RestauranteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["restaurante"]>



  export type RestauranteSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type RestauranteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "ubicaciones", ExtArgs["result"]["restaurante"]>
  export type RestauranteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Restaurante$productosArgs<ExtArgs>
    _count?: boolean | RestauranteCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $RestaurantePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Restaurante"
    objects: {
      productos: Prisma.$ProductoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre: string
    }, ExtArgs["result"]["restaurante"]>
    composites: {
      ubicaciones: Prisma.$UbicacionPayload[]
    }
  }

  type RestauranteGetPayload<S extends boolean | null | undefined | RestauranteDefaultArgs> = $Result.GetResult<Prisma.$RestaurantePayload, S>

  type RestauranteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RestauranteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RestauranteCountAggregateInputType | true
    }

  export interface RestauranteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Restaurante'], meta: { name: 'Restaurante' } }
    /**
     * Find zero or one Restaurante that matches the filter.
     * @param {RestauranteFindUniqueArgs} args - Arguments to find a Restaurante
     * @example
     * // Get one Restaurante
     * const restaurante = await prisma.restaurante.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RestauranteFindUniqueArgs>(args: SelectSubset<T, RestauranteFindUniqueArgs<ExtArgs>>): Prisma__RestauranteClient<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Restaurante that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RestauranteFindUniqueOrThrowArgs} args - Arguments to find a Restaurante
     * @example
     * // Get one Restaurante
     * const restaurante = await prisma.restaurante.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RestauranteFindUniqueOrThrowArgs>(args: SelectSubset<T, RestauranteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RestauranteClient<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Restaurante that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RestauranteFindFirstArgs} args - Arguments to find a Restaurante
     * @example
     * // Get one Restaurante
     * const restaurante = await prisma.restaurante.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RestauranteFindFirstArgs>(args?: SelectSubset<T, RestauranteFindFirstArgs<ExtArgs>>): Prisma__RestauranteClient<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Restaurante that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RestauranteFindFirstOrThrowArgs} args - Arguments to find a Restaurante
     * @example
     * // Get one Restaurante
     * const restaurante = await prisma.restaurante.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RestauranteFindFirstOrThrowArgs>(args?: SelectSubset<T, RestauranteFindFirstOrThrowArgs<ExtArgs>>): Prisma__RestauranteClient<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Restaurantes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RestauranteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Restaurantes
     * const restaurantes = await prisma.restaurante.findMany()
     * 
     * // Get first 10 Restaurantes
     * const restaurantes = await prisma.restaurante.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const restauranteWithIdOnly = await prisma.restaurante.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RestauranteFindManyArgs>(args?: SelectSubset<T, RestauranteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Restaurante.
     * @param {RestauranteCreateArgs} args - Arguments to create a Restaurante.
     * @example
     * // Create one Restaurante
     * const Restaurante = await prisma.restaurante.create({
     *   data: {
     *     // ... data to create a Restaurante
     *   }
     * })
     * 
     */
    create<T extends RestauranteCreateArgs>(args: SelectSubset<T, RestauranteCreateArgs<ExtArgs>>): Prisma__RestauranteClient<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Restaurantes.
     * @param {RestauranteCreateManyArgs} args - Arguments to create many Restaurantes.
     * @example
     * // Create many Restaurantes
     * const restaurante = await prisma.restaurante.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RestauranteCreateManyArgs>(args?: SelectSubset<T, RestauranteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Restaurante.
     * @param {RestauranteDeleteArgs} args - Arguments to delete one Restaurante.
     * @example
     * // Delete one Restaurante
     * const Restaurante = await prisma.restaurante.delete({
     *   where: {
     *     // ... filter to delete one Restaurante
     *   }
     * })
     * 
     */
    delete<T extends RestauranteDeleteArgs>(args: SelectSubset<T, RestauranteDeleteArgs<ExtArgs>>): Prisma__RestauranteClient<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Restaurante.
     * @param {RestauranteUpdateArgs} args - Arguments to update one Restaurante.
     * @example
     * // Update one Restaurante
     * const restaurante = await prisma.restaurante.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RestauranteUpdateArgs>(args: SelectSubset<T, RestauranteUpdateArgs<ExtArgs>>): Prisma__RestauranteClient<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Restaurantes.
     * @param {RestauranteDeleteManyArgs} args - Arguments to filter Restaurantes to delete.
     * @example
     * // Delete a few Restaurantes
     * const { count } = await prisma.restaurante.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RestauranteDeleteManyArgs>(args?: SelectSubset<T, RestauranteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Restaurantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RestauranteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Restaurantes
     * const restaurante = await prisma.restaurante.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RestauranteUpdateManyArgs>(args: SelectSubset<T, RestauranteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Restaurante.
     * @param {RestauranteUpsertArgs} args - Arguments to update or create a Restaurante.
     * @example
     * // Update or create a Restaurante
     * const restaurante = await prisma.restaurante.upsert({
     *   create: {
     *     // ... data to create a Restaurante
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Restaurante we want to update
     *   }
     * })
     */
    upsert<T extends RestauranteUpsertArgs>(args: SelectSubset<T, RestauranteUpsertArgs<ExtArgs>>): Prisma__RestauranteClient<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Restaurantes that matches the filter.
     * @param {RestauranteFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const restaurante = await prisma.restaurante.findRaw({
     *   filter: { age: { $gt: 25 } }
     * })
     */
    findRaw(args?: RestauranteFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a Restaurante.
     * @param {RestauranteAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const restaurante = await prisma.restaurante.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: RestauranteAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Restaurantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RestauranteCountArgs} args - Arguments to filter Restaurantes to count.
     * @example
     * // Count the number of Restaurantes
     * const count = await prisma.restaurante.count({
     *   where: {
     *     // ... the filter for the Restaurantes we want to count
     *   }
     * })
    **/
    count<T extends RestauranteCountArgs>(
      args?: Subset<T, RestauranteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RestauranteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Restaurante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RestauranteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RestauranteAggregateArgs>(args: Subset<T, RestauranteAggregateArgs>): Prisma.PrismaPromise<GetRestauranteAggregateType<T>>

    /**
     * Group by Restaurante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RestauranteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RestauranteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RestauranteGroupByArgs['orderBy'] }
        : { orderBy?: RestauranteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RestauranteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRestauranteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Restaurante model
   */
  readonly fields: RestauranteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Restaurante.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RestauranteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends Restaurante$productosArgs<ExtArgs> = {}>(args?: Subset<T, Restaurante$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Restaurante model
   */
  interface RestauranteFieldRefs {
    readonly id: FieldRef<"Restaurante", 'String'>
    readonly nombre: FieldRef<"Restaurante", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Restaurante findUnique
   */
  export type RestauranteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
    /**
     * Filter, which Restaurante to fetch.
     */
    where: RestauranteWhereUniqueInput
  }

  /**
   * Restaurante findUniqueOrThrow
   */
  export type RestauranteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
    /**
     * Filter, which Restaurante to fetch.
     */
    where: RestauranteWhereUniqueInput
  }

  /**
   * Restaurante findFirst
   */
  export type RestauranteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
    /**
     * Filter, which Restaurante to fetch.
     */
    where?: RestauranteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Restaurantes to fetch.
     */
    orderBy?: RestauranteOrderByWithRelationInput | RestauranteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Restaurantes.
     */
    cursor?: RestauranteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Restaurantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Restaurantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Restaurantes.
     */
    distinct?: RestauranteScalarFieldEnum | RestauranteScalarFieldEnum[]
  }

  /**
   * Restaurante findFirstOrThrow
   */
  export type RestauranteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
    /**
     * Filter, which Restaurante to fetch.
     */
    where?: RestauranteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Restaurantes to fetch.
     */
    orderBy?: RestauranteOrderByWithRelationInput | RestauranteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Restaurantes.
     */
    cursor?: RestauranteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Restaurantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Restaurantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Restaurantes.
     */
    distinct?: RestauranteScalarFieldEnum | RestauranteScalarFieldEnum[]
  }

  /**
   * Restaurante findMany
   */
  export type RestauranteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
    /**
     * Filter, which Restaurantes to fetch.
     */
    where?: RestauranteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Restaurantes to fetch.
     */
    orderBy?: RestauranteOrderByWithRelationInput | RestauranteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Restaurantes.
     */
    cursor?: RestauranteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Restaurantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Restaurantes.
     */
    skip?: number
    distinct?: RestauranteScalarFieldEnum | RestauranteScalarFieldEnum[]
  }

  /**
   * Restaurante create
   */
  export type RestauranteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
    /**
     * The data needed to create a Restaurante.
     */
    data: XOR<RestauranteCreateInput, RestauranteUncheckedCreateInput>
  }

  /**
   * Restaurante createMany
   */
  export type RestauranteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Restaurantes.
     */
    data: RestauranteCreateManyInput | RestauranteCreateManyInput[]
  }

  /**
   * Restaurante update
   */
  export type RestauranteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
    /**
     * The data needed to update a Restaurante.
     */
    data: XOR<RestauranteUpdateInput, RestauranteUncheckedUpdateInput>
    /**
     * Choose, which Restaurante to update.
     */
    where: RestauranteWhereUniqueInput
  }

  /**
   * Restaurante updateMany
   */
  export type RestauranteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Restaurantes.
     */
    data: XOR<RestauranteUpdateManyMutationInput, RestauranteUncheckedUpdateManyInput>
    /**
     * Filter which Restaurantes to update
     */
    where?: RestauranteWhereInput
    /**
     * Limit how many Restaurantes to update.
     */
    limit?: number
  }

  /**
   * Restaurante upsert
   */
  export type RestauranteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
    /**
     * The filter to search for the Restaurante to update in case it exists.
     */
    where: RestauranteWhereUniqueInput
    /**
     * In case the Restaurante found by the `where` argument doesn't exist, create a new Restaurante with this data.
     */
    create: XOR<RestauranteCreateInput, RestauranteUncheckedCreateInput>
    /**
     * In case the Restaurante was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RestauranteUpdateInput, RestauranteUncheckedUpdateInput>
  }

  /**
   * Restaurante delete
   */
  export type RestauranteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
    /**
     * Filter which Restaurante to delete.
     */
    where: RestauranteWhereUniqueInput
  }

  /**
   * Restaurante deleteMany
   */
  export type RestauranteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Restaurantes to delete
     */
    where?: RestauranteWhereInput
    /**
     * Limit how many Restaurantes to delete.
     */
    limit?: number
  }

  /**
   * Restaurante findRaw
   */
  export type RestauranteFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Restaurante aggregateRaw
   */
  export type RestauranteAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Restaurante.productos
   */
  export type Restaurante$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Restaurante without action
   */
  export type RestauranteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Restaurante
     */
    select?: RestauranteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Restaurante
     */
    omit?: RestauranteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RestauranteInclude<ExtArgs> | null
  }


  /**
   * Model Producto
   */

  export type AggregateProducto = {
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  export type ProductoAvgAggregateOutputType = {
    precio: number | null
  }

  export type ProductoSumAggregateOutputType = {
    precio: number | null
  }

  export type ProductoMinAggregateOutputType = {
    id: string | null
    nombre: string | null
    precio: number | null
    especificaciones: string | null
    restauranteId: string | null
  }

  export type ProductoMaxAggregateOutputType = {
    id: string | null
    nombre: string | null
    precio: number | null
    especificaciones: string | null
    restauranteId: string | null
  }

  export type ProductoCountAggregateOutputType = {
    id: number
    nombre: number
    precio: number
    especificaciones: number
    restauranteId: number
    _all: number
  }


  export type ProductoAvgAggregateInputType = {
    precio?: true
  }

  export type ProductoSumAggregateInputType = {
    precio?: true
  }

  export type ProductoMinAggregateInputType = {
    id?: true
    nombre?: true
    precio?: true
    especificaciones?: true
    restauranteId?: true
  }

  export type ProductoMaxAggregateInputType = {
    id?: true
    nombre?: true
    precio?: true
    especificaciones?: true
    restauranteId?: true
  }

  export type ProductoCountAggregateInputType = {
    id?: true
    nombre?: true
    precio?: true
    especificaciones?: true
    restauranteId?: true
    _all?: true
  }

  export type ProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producto to aggregate.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos
    **/
    _count?: true | ProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoMaxAggregateInputType
  }

  export type GetProductoAggregateType<T extends ProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto[P]>
      : GetScalarType<T[P], AggregateProducto[P]>
  }




  export type ProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithAggregationInput | ProductoOrderByWithAggregationInput[]
    by: ProductoScalarFieldEnum[] | ProductoScalarFieldEnum
    having?: ProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoCountAggregateInputType | true
    _avg?: ProductoAvgAggregateInputType
    _sum?: ProductoSumAggregateInputType
    _min?: ProductoMinAggregateInputType
    _max?: ProductoMaxAggregateInputType
  }

  export type ProductoGroupByOutputType = {
    id: string
    nombre: string
    precio: number
    especificaciones: string
    restauranteId: string
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  type GetProductoGroupByPayload<T extends ProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoGroupByOutputType[P]>
        }
      >
    >


  export type ProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    precio?: boolean
    especificaciones?: boolean
    restauranteId?: boolean
    restaurante?: boolean | RestauranteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>



  export type ProductoSelectScalar = {
    id?: boolean
    nombre?: boolean
    precio?: boolean
    especificaciones?: boolean
    restauranteId?: boolean
  }

  export type ProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "precio" | "especificaciones" | "restauranteId", ExtArgs["result"]["producto"]>
  export type ProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    restaurante?: boolean | RestauranteDefaultArgs<ExtArgs>
  }

  export type $ProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Producto"
    objects: {
      restaurante: Prisma.$RestaurantePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre: string
      precio: number
      especificaciones: string
      restauranteId: string
    }, ExtArgs["result"]["producto"]>
    composites: {}
  }

  type ProductoGetPayload<S extends boolean | null | undefined | ProductoDefaultArgs> = $Result.GetResult<Prisma.$ProductoPayload, S>

  type ProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductoCountAggregateInputType | true
    }

  export interface ProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producto'], meta: { name: 'Producto' } }
    /**
     * Find zero or one Producto that matches the filter.
     * @param {ProductoFindUniqueArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductoFindUniqueArgs>(args: SelectSubset<T, ProductoFindUniqueArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductoFindUniqueOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductoFindFirstArgs>(args?: SelectSubset<T, ProductoFindFirstArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.producto.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.producto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productoWithIdOnly = await prisma.producto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductoFindManyArgs>(args?: SelectSubset<T, ProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Producto.
     * @param {ProductoCreateArgs} args - Arguments to create a Producto.
     * @example
     * // Create one Producto
     * const Producto = await prisma.producto.create({
     *   data: {
     *     // ... data to create a Producto
     *   }
     * })
     * 
     */
    create<T extends ProductoCreateArgs>(args: SelectSubset<T, ProductoCreateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {ProductoCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductoCreateManyArgs>(args?: SelectSubset<T, ProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Producto.
     * @param {ProductoDeleteArgs} args - Arguments to delete one Producto.
     * @example
     * // Delete one Producto
     * const Producto = await prisma.producto.delete({
     *   where: {
     *     // ... filter to delete one Producto
     *   }
     * })
     * 
     */
    delete<T extends ProductoDeleteArgs>(args: SelectSubset<T, ProductoDeleteArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Producto.
     * @param {ProductoUpdateArgs} args - Arguments to update one Producto.
     * @example
     * // Update one Producto
     * const producto = await prisma.producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductoUpdateArgs>(args: SelectSubset<T, ProductoUpdateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {ProductoDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductoDeleteManyArgs>(args?: SelectSubset<T, ProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductoUpdateManyArgs>(args: SelectSubset<T, ProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Producto.
     * @param {ProductoUpsertArgs} args - Arguments to update or create a Producto.
     * @example
     * // Update or create a Producto
     * const producto = await prisma.producto.upsert({
     *   create: {
     *     // ... data to create a Producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto we want to update
     *   }
     * })
     */
    upsert<T extends ProductoUpsertArgs>(args: SelectSubset<T, ProductoUpsertArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * @param {ProductoFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const producto = await prisma.producto.findRaw({
     *   filter: { age: { $gt: 25 } }
     * })
     */
    findRaw(args?: ProductoFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a Producto.
     * @param {ProductoAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const producto = await prisma.producto.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: ProductoAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.producto.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends ProductoCountArgs>(
      args?: Subset<T, ProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoAggregateArgs>(args: Subset<T, ProductoAggregateArgs>): Prisma.PrismaPromise<GetProductoAggregateType<T>>

    /**
     * Group by Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductoGroupByArgs['orderBy'] }
        : { orderBy?: ProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Producto model
   */
  readonly fields: ProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    restaurante<T extends RestauranteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RestauranteDefaultArgs<ExtArgs>>): Prisma__RestauranteClient<$Result.GetResult<Prisma.$RestaurantePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Producto model
   */
  interface ProductoFieldRefs {
    readonly id: FieldRef<"Producto", 'String'>
    readonly nombre: FieldRef<"Producto", 'String'>
    readonly precio: FieldRef<"Producto", 'Float'>
    readonly especificaciones: FieldRef<"Producto", 'String'>
    readonly restauranteId: FieldRef<"Producto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Producto findUnique
   */
  export type ProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findUniqueOrThrow
   */
  export type ProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findFirst
   */
  export type ProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findFirstOrThrow
   */
  export type ProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findMany
   */
  export type ProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto create
   */
  export type ProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a Producto.
     */
    data: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
  }

  /**
   * Producto createMany
   */
  export type ProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
  }

  /**
   * Producto update
   */
  export type ProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a Producto.
     */
    data: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
    /**
     * Choose, which Producto to update.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto updateMany
   */
  export type ProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
  }

  /**
   * Producto upsert
   */
  export type ProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the Producto to update in case it exists.
     */
    where: ProductoWhereUniqueInput
    /**
     * In case the Producto found by the `where` argument doesn't exist, create a new Producto with this data.
     */
    create: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
    /**
     * In case the Producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
  }

  /**
   * Producto delete
   */
  export type ProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter which Producto to delete.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto deleteMany
   */
  export type ProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to delete
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to delete.
     */
    limit?: number
  }

  /**
   * Producto findRaw
   */
  export type ProductoFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Producto aggregateRaw
   */
  export type ProductoAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Producto without action
   */
  export type ProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
  }


  /**
   * Model Calificacion
   */

  export type AggregateCalificacion = {
    _count: CalificacionCountAggregateOutputType | null
    _avg: CalificacionAvgAggregateOutputType | null
    _sum: CalificacionSumAggregateOutputType | null
    _min: CalificacionMinAggregateOutputType | null
    _max: CalificacionMaxAggregateOutputType | null
  }

  export type CalificacionAvgAggregateOutputType = {
    calificacionRepartidor: number | null
    calificacionPedido: number | null
  }

  export type CalificacionSumAggregateOutputType = {
    calificacionRepartidor: number | null
    calificacionPedido: number | null
  }

  export type CalificacionMinAggregateOutputType = {
    id: string | null
    calificacionRepartidor: number | null
    calificacionPedido: number | null
    comentarios: string | null
    pedidoId: string | null
  }

  export type CalificacionMaxAggregateOutputType = {
    id: string | null
    calificacionRepartidor: number | null
    calificacionPedido: number | null
    comentarios: string | null
    pedidoId: string | null
  }

  export type CalificacionCountAggregateOutputType = {
    id: number
    calificacionRepartidor: number
    calificacionPedido: number
    comentarios: number
    pedidoId: number
    _all: number
  }


  export type CalificacionAvgAggregateInputType = {
    calificacionRepartidor?: true
    calificacionPedido?: true
  }

  export type CalificacionSumAggregateInputType = {
    calificacionRepartidor?: true
    calificacionPedido?: true
  }

  export type CalificacionMinAggregateInputType = {
    id?: true
    calificacionRepartidor?: true
    calificacionPedido?: true
    comentarios?: true
    pedidoId?: true
  }

  export type CalificacionMaxAggregateInputType = {
    id?: true
    calificacionRepartidor?: true
    calificacionPedido?: true
    comentarios?: true
    pedidoId?: true
  }

  export type CalificacionCountAggregateInputType = {
    id?: true
    calificacionRepartidor?: true
    calificacionPedido?: true
    comentarios?: true
    pedidoId?: true
    _all?: true
  }

  export type CalificacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Calificacion to aggregate.
     */
    where?: CalificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificacions to fetch.
     */
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CalificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Calificacions
    **/
    _count?: true | CalificacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CalificacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CalificacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CalificacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CalificacionMaxAggregateInputType
  }

  export type GetCalificacionAggregateType<T extends CalificacionAggregateArgs> = {
        [P in keyof T & keyof AggregateCalificacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCalificacion[P]>
      : GetScalarType<T[P], AggregateCalificacion[P]>
  }




  export type CalificacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionWhereInput
    orderBy?: CalificacionOrderByWithAggregationInput | CalificacionOrderByWithAggregationInput[]
    by: CalificacionScalarFieldEnum[] | CalificacionScalarFieldEnum
    having?: CalificacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CalificacionCountAggregateInputType | true
    _avg?: CalificacionAvgAggregateInputType
    _sum?: CalificacionSumAggregateInputType
    _min?: CalificacionMinAggregateInputType
    _max?: CalificacionMaxAggregateInputType
  }

  export type CalificacionGroupByOutputType = {
    id: string
    calificacionRepartidor: number
    calificacionPedido: number
    comentarios: string | null
    pedidoId: string
    _count: CalificacionCountAggregateOutputType | null
    _avg: CalificacionAvgAggregateOutputType | null
    _sum: CalificacionSumAggregateOutputType | null
    _min: CalificacionMinAggregateOutputType | null
    _max: CalificacionMaxAggregateOutputType | null
  }

  type GetCalificacionGroupByPayload<T extends CalificacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CalificacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CalificacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CalificacionGroupByOutputType[P]>
            : GetScalarType<T[P], CalificacionGroupByOutputType[P]>
        }
      >
    >


  export type CalificacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    calificacionRepartidor?: boolean
    calificacionPedido?: boolean
    comentarios?: boolean
    pedidoId?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacion"]>



  export type CalificacionSelectScalar = {
    id?: boolean
    calificacionRepartidor?: boolean
    calificacionPedido?: boolean
    comentarios?: boolean
    pedidoId?: boolean
  }

  export type CalificacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "calificacionRepartidor" | "calificacionPedido" | "comentarios" | "pedidoId", ExtArgs["result"]["calificacion"]>
  export type CalificacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }

  export type $CalificacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Calificacion"
    objects: {
      pedido: Prisma.$PedidoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      calificacionRepartidor: number
      calificacionPedido: number
      comentarios: string | null
      pedidoId: string
    }, ExtArgs["result"]["calificacion"]>
    composites: {}
  }

  type CalificacionGetPayload<S extends boolean | null | undefined | CalificacionDefaultArgs> = $Result.GetResult<Prisma.$CalificacionPayload, S>

  type CalificacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CalificacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CalificacionCountAggregateInputType | true
    }

  export interface CalificacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Calificacion'], meta: { name: 'Calificacion' } }
    /**
     * Find zero or one Calificacion that matches the filter.
     * @param {CalificacionFindUniqueArgs} args - Arguments to find a Calificacion
     * @example
     * // Get one Calificacion
     * const calificacion = await prisma.calificacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CalificacionFindUniqueArgs>(args: SelectSubset<T, CalificacionFindUniqueArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Calificacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CalificacionFindUniqueOrThrowArgs} args - Arguments to find a Calificacion
     * @example
     * // Get one Calificacion
     * const calificacion = await prisma.calificacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CalificacionFindUniqueOrThrowArgs>(args: SelectSubset<T, CalificacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Calificacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionFindFirstArgs} args - Arguments to find a Calificacion
     * @example
     * // Get one Calificacion
     * const calificacion = await prisma.calificacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CalificacionFindFirstArgs>(args?: SelectSubset<T, CalificacionFindFirstArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Calificacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionFindFirstOrThrowArgs} args - Arguments to find a Calificacion
     * @example
     * // Get one Calificacion
     * const calificacion = await prisma.calificacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CalificacionFindFirstOrThrowArgs>(args?: SelectSubset<T, CalificacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Calificacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Calificacions
     * const calificacions = await prisma.calificacion.findMany()
     * 
     * // Get first 10 Calificacions
     * const calificacions = await prisma.calificacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const calificacionWithIdOnly = await prisma.calificacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CalificacionFindManyArgs>(args?: SelectSubset<T, CalificacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Calificacion.
     * @param {CalificacionCreateArgs} args - Arguments to create a Calificacion.
     * @example
     * // Create one Calificacion
     * const Calificacion = await prisma.calificacion.create({
     *   data: {
     *     // ... data to create a Calificacion
     *   }
     * })
     * 
     */
    create<T extends CalificacionCreateArgs>(args: SelectSubset<T, CalificacionCreateArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Calificacions.
     * @param {CalificacionCreateManyArgs} args - Arguments to create many Calificacions.
     * @example
     * // Create many Calificacions
     * const calificacion = await prisma.calificacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CalificacionCreateManyArgs>(args?: SelectSubset<T, CalificacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Calificacion.
     * @param {CalificacionDeleteArgs} args - Arguments to delete one Calificacion.
     * @example
     * // Delete one Calificacion
     * const Calificacion = await prisma.calificacion.delete({
     *   where: {
     *     // ... filter to delete one Calificacion
     *   }
     * })
     * 
     */
    delete<T extends CalificacionDeleteArgs>(args: SelectSubset<T, CalificacionDeleteArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Calificacion.
     * @param {CalificacionUpdateArgs} args - Arguments to update one Calificacion.
     * @example
     * // Update one Calificacion
     * const calificacion = await prisma.calificacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CalificacionUpdateArgs>(args: SelectSubset<T, CalificacionUpdateArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Calificacions.
     * @param {CalificacionDeleteManyArgs} args - Arguments to filter Calificacions to delete.
     * @example
     * // Delete a few Calificacions
     * const { count } = await prisma.calificacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CalificacionDeleteManyArgs>(args?: SelectSubset<T, CalificacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Calificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Calificacions
     * const calificacion = await prisma.calificacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CalificacionUpdateManyArgs>(args: SelectSubset<T, CalificacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Calificacion.
     * @param {CalificacionUpsertArgs} args - Arguments to update or create a Calificacion.
     * @example
     * // Update or create a Calificacion
     * const calificacion = await prisma.calificacion.upsert({
     *   create: {
     *     // ... data to create a Calificacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Calificacion we want to update
     *   }
     * })
     */
    upsert<T extends CalificacionUpsertArgs>(args: SelectSubset<T, CalificacionUpsertArgs<ExtArgs>>): Prisma__CalificacionClient<$Result.GetResult<Prisma.$CalificacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Calificacions that matches the filter.
     * @param {CalificacionFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const calificacion = await prisma.calificacion.findRaw({
     *   filter: { age: { $gt: 25 } }
     * })
     */
    findRaw(args?: CalificacionFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a Calificacion.
     * @param {CalificacionAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const calificacion = await prisma.calificacion.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: CalificacionAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Calificacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionCountArgs} args - Arguments to filter Calificacions to count.
     * @example
     * // Count the number of Calificacions
     * const count = await prisma.calificacion.count({
     *   where: {
     *     // ... the filter for the Calificacions we want to count
     *   }
     * })
    **/
    count<T extends CalificacionCountArgs>(
      args?: Subset<T, CalificacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CalificacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Calificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CalificacionAggregateArgs>(args: Subset<T, CalificacionAggregateArgs>): Prisma.PrismaPromise<GetCalificacionAggregateType<T>>

    /**
     * Group by Calificacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CalificacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CalificacionGroupByArgs['orderBy'] }
        : { orderBy?: CalificacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CalificacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCalificacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Calificacion model
   */
  readonly fields: CalificacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Calificacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CalificacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoDefaultArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Calificacion model
   */
  interface CalificacionFieldRefs {
    readonly id: FieldRef<"Calificacion", 'String'>
    readonly calificacionRepartidor: FieldRef<"Calificacion", 'Int'>
    readonly calificacionPedido: FieldRef<"Calificacion", 'Int'>
    readonly comentarios: FieldRef<"Calificacion", 'String'>
    readonly pedidoId: FieldRef<"Calificacion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Calificacion findUnique
   */
  export type CalificacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacion to fetch.
     */
    where: CalificacionWhereUniqueInput
  }

  /**
   * Calificacion findUniqueOrThrow
   */
  export type CalificacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacion to fetch.
     */
    where: CalificacionWhereUniqueInput
  }

  /**
   * Calificacion findFirst
   */
  export type CalificacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacion to fetch.
     */
    where?: CalificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificacions to fetch.
     */
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Calificacions.
     */
    cursor?: CalificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Calificacions.
     */
    distinct?: CalificacionScalarFieldEnum | CalificacionScalarFieldEnum[]
  }

  /**
   * Calificacion findFirstOrThrow
   */
  export type CalificacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacion to fetch.
     */
    where?: CalificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificacions to fetch.
     */
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Calificacions.
     */
    cursor?: CalificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Calificacions.
     */
    distinct?: CalificacionScalarFieldEnum | CalificacionScalarFieldEnum[]
  }

  /**
   * Calificacion findMany
   */
  export type CalificacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter, which Calificacions to fetch.
     */
    where?: CalificacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificacions to fetch.
     */
    orderBy?: CalificacionOrderByWithRelationInput | CalificacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Calificacions.
     */
    cursor?: CalificacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificacions.
     */
    skip?: number
    distinct?: CalificacionScalarFieldEnum | CalificacionScalarFieldEnum[]
  }

  /**
   * Calificacion create
   */
  export type CalificacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Calificacion.
     */
    data: XOR<CalificacionCreateInput, CalificacionUncheckedCreateInput>
  }

  /**
   * Calificacion createMany
   */
  export type CalificacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Calificacions.
     */
    data: CalificacionCreateManyInput | CalificacionCreateManyInput[]
  }

  /**
   * Calificacion update
   */
  export type CalificacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Calificacion.
     */
    data: XOR<CalificacionUpdateInput, CalificacionUncheckedUpdateInput>
    /**
     * Choose, which Calificacion to update.
     */
    where: CalificacionWhereUniqueInput
  }

  /**
   * Calificacion updateMany
   */
  export type CalificacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Calificacions.
     */
    data: XOR<CalificacionUpdateManyMutationInput, CalificacionUncheckedUpdateManyInput>
    /**
     * Filter which Calificacions to update
     */
    where?: CalificacionWhereInput
    /**
     * Limit how many Calificacions to update.
     */
    limit?: number
  }

  /**
   * Calificacion upsert
   */
  export type CalificacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Calificacion to update in case it exists.
     */
    where: CalificacionWhereUniqueInput
    /**
     * In case the Calificacion found by the `where` argument doesn't exist, create a new Calificacion with this data.
     */
    create: XOR<CalificacionCreateInput, CalificacionUncheckedCreateInput>
    /**
     * In case the Calificacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CalificacionUpdateInput, CalificacionUncheckedUpdateInput>
  }

  /**
   * Calificacion delete
   */
  export type CalificacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
    /**
     * Filter which Calificacion to delete.
     */
    where: CalificacionWhereUniqueInput
  }

  /**
   * Calificacion deleteMany
   */
  export type CalificacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Calificacions to delete
     */
    where?: CalificacionWhereInput
    /**
     * Limit how many Calificacions to delete.
     */
    limit?: number
  }

  /**
   * Calificacion findRaw
   */
  export type CalificacionFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Calificacion aggregateRaw
   */
  export type CalificacionAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Calificacion without action
   */
  export type CalificacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificacion
     */
    select?: CalificacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificacion
     */
    omit?: CalificacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionInclude<ExtArgs> | null
  }


  /**
   * Model Mensaje
   */

  export type AggregateMensaje = {
    _count: MensajeCountAggregateOutputType | null
    _min: MensajeMinAggregateOutputType | null
    _max: MensajeMaxAggregateOutputType | null
  }

  export type MensajeMinAggregateOutputType = {
    id: string | null
    pedidoId: string | null
    usuarioEmisorId: string | null
    usuarioReceptorId: string | null
    texto: string | null
    fechaEnvio: Date | null
  }

  export type MensajeMaxAggregateOutputType = {
    id: string | null
    pedidoId: string | null
    usuarioEmisorId: string | null
    usuarioReceptorId: string | null
    texto: string | null
    fechaEnvio: Date | null
  }

  export type MensajeCountAggregateOutputType = {
    id: number
    pedidoId: number
    usuarioEmisorId: number
    usuarioReceptorId: number
    texto: number
    fechaEnvio: number
    _all: number
  }


  export type MensajeMinAggregateInputType = {
    id?: true
    pedidoId?: true
    usuarioEmisorId?: true
    usuarioReceptorId?: true
    texto?: true
    fechaEnvio?: true
  }

  export type MensajeMaxAggregateInputType = {
    id?: true
    pedidoId?: true
    usuarioEmisorId?: true
    usuarioReceptorId?: true
    texto?: true
    fechaEnvio?: true
  }

  export type MensajeCountAggregateInputType = {
    id?: true
    pedidoId?: true
    usuarioEmisorId?: true
    usuarioReceptorId?: true
    texto?: true
    fechaEnvio?: true
    _all?: true
  }

  export type MensajeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mensaje to aggregate.
     */
    where?: MensajeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MensajeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mensajes
    **/
    _count?: true | MensajeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MensajeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MensajeMaxAggregateInputType
  }

  export type GetMensajeAggregateType<T extends MensajeAggregateArgs> = {
        [P in keyof T & keyof AggregateMensaje]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMensaje[P]>
      : GetScalarType<T[P], AggregateMensaje[P]>
  }




  export type MensajeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajeWhereInput
    orderBy?: MensajeOrderByWithAggregationInput | MensajeOrderByWithAggregationInput[]
    by: MensajeScalarFieldEnum[] | MensajeScalarFieldEnum
    having?: MensajeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MensajeCountAggregateInputType | true
    _min?: MensajeMinAggregateInputType
    _max?: MensajeMaxAggregateInputType
  }

  export type MensajeGroupByOutputType = {
    id: string
    pedidoId: string
    usuarioEmisorId: string
    usuarioReceptorId: string
    texto: string
    fechaEnvio: Date
    _count: MensajeCountAggregateOutputType | null
    _min: MensajeMinAggregateOutputType | null
    _max: MensajeMaxAggregateOutputType | null
  }

  type GetMensajeGroupByPayload<T extends MensajeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MensajeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MensajeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MensajeGroupByOutputType[P]>
            : GetScalarType<T[P], MensajeGroupByOutputType[P]>
        }
      >
    >


  export type MensajeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoId?: boolean
    usuarioEmisorId?: boolean
    usuarioReceptorId?: boolean
    texto?: boolean
    fechaEnvio?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    usuarioEmisor?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuarioReceptor?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensaje"]>



  export type MensajeSelectScalar = {
    id?: boolean
    pedidoId?: boolean
    usuarioEmisorId?: boolean
    usuarioReceptorId?: boolean
    texto?: boolean
    fechaEnvio?: boolean
  }

  export type MensajeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "pedidoId" | "usuarioEmisorId" | "usuarioReceptorId" | "texto" | "fechaEnvio", ExtArgs["result"]["mensaje"]>
  export type MensajeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
    usuarioEmisor?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuarioReceptor?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $MensajePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mensaje"
    objects: {
      pedido: Prisma.$PedidoPayload<ExtArgs>
      usuarioEmisor: Prisma.$UsuarioPayload<ExtArgs>
      usuarioReceptor: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      pedidoId: string
      usuarioEmisorId: string
      usuarioReceptorId: string
      texto: string
      fechaEnvio: Date
    }, ExtArgs["result"]["mensaje"]>
    composites: {}
  }

  type MensajeGetPayload<S extends boolean | null | undefined | MensajeDefaultArgs> = $Result.GetResult<Prisma.$MensajePayload, S>

  type MensajeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MensajeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MensajeCountAggregateInputType | true
    }

  export interface MensajeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mensaje'], meta: { name: 'Mensaje' } }
    /**
     * Find zero or one Mensaje that matches the filter.
     * @param {MensajeFindUniqueArgs} args - Arguments to find a Mensaje
     * @example
     * // Get one Mensaje
     * const mensaje = await prisma.mensaje.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MensajeFindUniqueArgs>(args: SelectSubset<T, MensajeFindUniqueArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mensaje that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MensajeFindUniqueOrThrowArgs} args - Arguments to find a Mensaje
     * @example
     * // Get one Mensaje
     * const mensaje = await prisma.mensaje.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MensajeFindUniqueOrThrowArgs>(args: SelectSubset<T, MensajeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mensaje that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeFindFirstArgs} args - Arguments to find a Mensaje
     * @example
     * // Get one Mensaje
     * const mensaje = await prisma.mensaje.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MensajeFindFirstArgs>(args?: SelectSubset<T, MensajeFindFirstArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mensaje that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeFindFirstOrThrowArgs} args - Arguments to find a Mensaje
     * @example
     * // Get one Mensaje
     * const mensaje = await prisma.mensaje.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MensajeFindFirstOrThrowArgs>(args?: SelectSubset<T, MensajeFindFirstOrThrowArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mensajes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mensajes
     * const mensajes = await prisma.mensaje.findMany()
     * 
     * // Get first 10 Mensajes
     * const mensajes = await prisma.mensaje.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mensajeWithIdOnly = await prisma.mensaje.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MensajeFindManyArgs>(args?: SelectSubset<T, MensajeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mensaje.
     * @param {MensajeCreateArgs} args - Arguments to create a Mensaje.
     * @example
     * // Create one Mensaje
     * const Mensaje = await prisma.mensaje.create({
     *   data: {
     *     // ... data to create a Mensaje
     *   }
     * })
     * 
     */
    create<T extends MensajeCreateArgs>(args: SelectSubset<T, MensajeCreateArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mensajes.
     * @param {MensajeCreateManyArgs} args - Arguments to create many Mensajes.
     * @example
     * // Create many Mensajes
     * const mensaje = await prisma.mensaje.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MensajeCreateManyArgs>(args?: SelectSubset<T, MensajeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Mensaje.
     * @param {MensajeDeleteArgs} args - Arguments to delete one Mensaje.
     * @example
     * // Delete one Mensaje
     * const Mensaje = await prisma.mensaje.delete({
     *   where: {
     *     // ... filter to delete one Mensaje
     *   }
     * })
     * 
     */
    delete<T extends MensajeDeleteArgs>(args: SelectSubset<T, MensajeDeleteArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mensaje.
     * @param {MensajeUpdateArgs} args - Arguments to update one Mensaje.
     * @example
     * // Update one Mensaje
     * const mensaje = await prisma.mensaje.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MensajeUpdateArgs>(args: SelectSubset<T, MensajeUpdateArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mensajes.
     * @param {MensajeDeleteManyArgs} args - Arguments to filter Mensajes to delete.
     * @example
     * // Delete a few Mensajes
     * const { count } = await prisma.mensaje.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MensajeDeleteManyArgs>(args?: SelectSubset<T, MensajeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mensajes
     * const mensaje = await prisma.mensaje.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MensajeUpdateManyArgs>(args: SelectSubset<T, MensajeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mensaje.
     * @param {MensajeUpsertArgs} args - Arguments to update or create a Mensaje.
     * @example
     * // Update or create a Mensaje
     * const mensaje = await prisma.mensaje.upsert({
     *   create: {
     *     // ... data to create a Mensaje
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mensaje we want to update
     *   }
     * })
     */
    upsert<T extends MensajeUpsertArgs>(args: SelectSubset<T, MensajeUpsertArgs<ExtArgs>>): Prisma__MensajeClient<$Result.GetResult<Prisma.$MensajePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mensajes that matches the filter.
     * @param {MensajeFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const mensaje = await prisma.mensaje.findRaw({
     *   filter: { age: { $gt: 25 } }
     * })
     */
    findRaw(args?: MensajeFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a Mensaje.
     * @param {MensajeAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const mensaje = await prisma.mensaje.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: MensajeAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeCountArgs} args - Arguments to filter Mensajes to count.
     * @example
     * // Count the number of Mensajes
     * const count = await prisma.mensaje.count({
     *   where: {
     *     // ... the filter for the Mensajes we want to count
     *   }
     * })
    **/
    count<T extends MensajeCountArgs>(
      args?: Subset<T, MensajeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MensajeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mensaje.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MensajeAggregateArgs>(args: Subset<T, MensajeAggregateArgs>): Prisma.PrismaPromise<GetMensajeAggregateType<T>>

    /**
     * Group by Mensaje.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MensajeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MensajeGroupByArgs['orderBy'] }
        : { orderBy?: MensajeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MensajeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMensajeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mensaje model
   */
  readonly fields: MensajeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mensaje.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MensajeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoDefaultArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarioEmisor<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarioReceptor<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mensaje model
   */
  interface MensajeFieldRefs {
    readonly id: FieldRef<"Mensaje", 'String'>
    readonly pedidoId: FieldRef<"Mensaje", 'String'>
    readonly usuarioEmisorId: FieldRef<"Mensaje", 'String'>
    readonly usuarioReceptorId: FieldRef<"Mensaje", 'String'>
    readonly texto: FieldRef<"Mensaje", 'String'>
    readonly fechaEnvio: FieldRef<"Mensaje", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Mensaje findUnique
   */
  export type MensajeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensaje to fetch.
     */
    where: MensajeWhereUniqueInput
  }

  /**
   * Mensaje findUniqueOrThrow
   */
  export type MensajeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensaje to fetch.
     */
    where: MensajeWhereUniqueInput
  }

  /**
   * Mensaje findFirst
   */
  export type MensajeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensaje to fetch.
     */
    where?: MensajeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mensajes.
     */
    cursor?: MensajeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mensajes.
     */
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Mensaje findFirstOrThrow
   */
  export type MensajeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensaje to fetch.
     */
    where?: MensajeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mensajes.
     */
    cursor?: MensajeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mensajes.
     */
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Mensaje findMany
   */
  export type MensajeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter, which Mensajes to fetch.
     */
    where?: MensajeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajeOrderByWithRelationInput | MensajeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mensajes.
     */
    cursor?: MensajeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    distinct?: MensajeScalarFieldEnum | MensajeScalarFieldEnum[]
  }

  /**
   * Mensaje create
   */
  export type MensajeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * The data needed to create a Mensaje.
     */
    data: XOR<MensajeCreateInput, MensajeUncheckedCreateInput>
  }

  /**
   * Mensaje createMany
   */
  export type MensajeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mensajes.
     */
    data: MensajeCreateManyInput | MensajeCreateManyInput[]
  }

  /**
   * Mensaje update
   */
  export type MensajeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * The data needed to update a Mensaje.
     */
    data: XOR<MensajeUpdateInput, MensajeUncheckedUpdateInput>
    /**
     * Choose, which Mensaje to update.
     */
    where: MensajeWhereUniqueInput
  }

  /**
   * Mensaje updateMany
   */
  export type MensajeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mensajes.
     */
    data: XOR<MensajeUpdateManyMutationInput, MensajeUncheckedUpdateManyInput>
    /**
     * Filter which Mensajes to update
     */
    where?: MensajeWhereInput
    /**
     * Limit how many Mensajes to update.
     */
    limit?: number
  }

  /**
   * Mensaje upsert
   */
  export type MensajeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * The filter to search for the Mensaje to update in case it exists.
     */
    where: MensajeWhereUniqueInput
    /**
     * In case the Mensaje found by the `where` argument doesn't exist, create a new Mensaje with this data.
     */
    create: XOR<MensajeCreateInput, MensajeUncheckedCreateInput>
    /**
     * In case the Mensaje was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MensajeUpdateInput, MensajeUncheckedUpdateInput>
  }

  /**
   * Mensaje delete
   */
  export type MensajeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
    /**
     * Filter which Mensaje to delete.
     */
    where: MensajeWhereUniqueInput
  }

  /**
   * Mensaje deleteMany
   */
  export type MensajeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mensajes to delete
     */
    where?: MensajeWhereInput
    /**
     * Limit how many Mensajes to delete.
     */
    limit?: number
  }

  /**
   * Mensaje findRaw
   */
  export type MensajeFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Mensaje aggregateRaw
   */
  export type MensajeAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Mensaje without action
   */
  export type MensajeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensaje
     */
    select?: MensajeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensaje
     */
    omit?: MensajeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajeInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nombreCompleto: 'nombreCompleto',
    contraseña: 'contraseña',
    rol: 'rol',
    direccion: 'direccion',
    telefono: 'telefono',
    cedula: 'cedula',
    email: 'email',
    vehiculo: 'vehiculo',
    resetToken: 'resetToken',
    resetTokenExpiry: 'resetTokenExpiry'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const PedidoScalarFieldEnum: {
    id: 'id',
    estado: 'estado',
    total: 'total',
    usuarioId: 'usuarioId',
    direccionEntrega: 'direccionEntrega',
    repartidorId: 'repartidorId',
    fechaDeCreacion: 'fechaDeCreacion'
  };

  export type PedidoScalarFieldEnum = (typeof PedidoScalarFieldEnum)[keyof typeof PedidoScalarFieldEnum]


  export const RestauranteScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type RestauranteScalarFieldEnum = (typeof RestauranteScalarFieldEnum)[keyof typeof RestauranteScalarFieldEnum]


  export const ProductoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    precio: 'precio',
    especificaciones: 'especificaciones',
    restauranteId: 'restauranteId'
  };

  export type ProductoScalarFieldEnum = (typeof ProductoScalarFieldEnum)[keyof typeof ProductoScalarFieldEnum]


  export const CalificacionScalarFieldEnum: {
    id: 'id',
    calificacionRepartidor: 'calificacionRepartidor',
    calificacionPedido: 'calificacionPedido',
    comentarios: 'comentarios',
    pedidoId: 'pedidoId'
  };

  export type CalificacionScalarFieldEnum = (typeof CalificacionScalarFieldEnum)[keyof typeof CalificacionScalarFieldEnum]


  export const MensajeScalarFieldEnum: {
    id: 'id',
    pedidoId: 'pedidoId',
    usuarioEmisorId: 'usuarioEmisorId',
    usuarioReceptorId: 'usuarioReceptorId',
    texto: 'texto',
    fechaEnvio: 'fechaEnvio'
  };

  export type MensajeScalarFieldEnum = (typeof MensajeScalarFieldEnum)[keyof typeof MensajeScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: StringFilter<"Usuario"> | string
    nombreCompleto?: StringFilter<"Usuario"> | string
    contraseña?: StringFilter<"Usuario"> | string
    rol?: StringFilter<"Usuario"> | string
    direccion?: StringFilter<"Usuario"> | string
    telefono?: IntFilter<"Usuario"> | number
    cedula?: IntFilter<"Usuario"> | number
    email?: StringFilter<"Usuario"> | string
    vehiculo?: StringNullableFilter<"Usuario"> | string | null
    resetToken?: StringNullableFilter<"Usuario"> | string | null
    resetTokenExpiry?: StringNullableFilter<"Usuario"> | string | null
    historialDirecciones?: HistorialDireccionCompositeListFilter | HistorialDireccionObjectEqualityInput[]
    pedidosCliente?: PedidoListRelationFilter
    pedidosRepartidor?: PedidoListRelationFilter
    mensajesEnviados?: MensajeListRelationFilter
    mensajesRecibidos?: MensajeListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    contraseña?: SortOrder
    rol?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    cedula?: SortOrder
    email?: SortOrder
    vehiculo?: SortOrder
    resetToken?: SortOrder
    resetTokenExpiry?: SortOrder
    historialDirecciones?: HistorialDireccionOrderByCompositeAggregateInput
    pedidosCliente?: PedidoOrderByRelationAggregateInput
    pedidosRepartidor?: PedidoOrderByRelationAggregateInput
    mensajesEnviados?: MensajeOrderByRelationAggregateInput
    mensajesRecibidos?: MensajeOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombreCompleto?: StringFilter<"Usuario"> | string
    contraseña?: StringFilter<"Usuario"> | string
    rol?: StringFilter<"Usuario"> | string
    direccion?: StringFilter<"Usuario"> | string
    telefono?: IntFilter<"Usuario"> | number
    cedula?: IntFilter<"Usuario"> | number
    vehiculo?: StringNullableFilter<"Usuario"> | string | null
    resetToken?: StringNullableFilter<"Usuario"> | string | null
    resetTokenExpiry?: StringNullableFilter<"Usuario"> | string | null
    historialDirecciones?: HistorialDireccionCompositeListFilter | HistorialDireccionObjectEqualityInput[]
    pedidosCliente?: PedidoListRelationFilter
    pedidosRepartidor?: PedidoListRelationFilter
    mensajesEnviados?: MensajeListRelationFilter
    mensajesRecibidos?: MensajeListRelationFilter
  }, "id" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    contraseña?: SortOrder
    rol?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    cedula?: SortOrder
    email?: SortOrder
    vehiculo?: SortOrder
    resetToken?: SortOrder
    resetTokenExpiry?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Usuario"> | string
    nombreCompleto?: StringWithAggregatesFilter<"Usuario"> | string
    contraseña?: StringWithAggregatesFilter<"Usuario"> | string
    rol?: StringWithAggregatesFilter<"Usuario"> | string
    direccion?: StringWithAggregatesFilter<"Usuario"> | string
    telefono?: IntWithAggregatesFilter<"Usuario"> | number
    cedula?: IntWithAggregatesFilter<"Usuario"> | number
    email?: StringWithAggregatesFilter<"Usuario"> | string
    vehiculo?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    resetToken?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
    resetTokenExpiry?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
  }

  export type PedidoWhereInput = {
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    id?: StringFilter<"Pedido"> | string
    estado?: StringFilter<"Pedido"> | string
    total?: FloatFilter<"Pedido"> | number
    usuarioId?: StringFilter<"Pedido"> | string
    direccionEntrega?: JsonFilter<"Pedido">
    repartidorId?: StringFilter<"Pedido"> | string
    fechaDeCreacion?: DateTimeFilter<"Pedido"> | Date | string
    productos?: ProductoPedidoCompositeListFilter | ProductoPedidoObjectEqualityInput[]
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    repartidor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    mensajes?: MensajeListRelationFilter
    calificacion?: XOR<CalificacionNullableScalarRelationFilter, CalificacionWhereInput> | null
  }

  export type PedidoOrderByWithRelationInput = {
    id?: SortOrder
    estado?: SortOrder
    total?: SortOrder
    usuarioId?: SortOrder
    direccionEntrega?: SortOrder
    repartidorId?: SortOrder
    fechaDeCreacion?: SortOrder
    productos?: ProductoPedidoOrderByCompositeAggregateInput
    usuario?: UsuarioOrderByWithRelationInput
    repartidor?: UsuarioOrderByWithRelationInput
    mensajes?: MensajeOrderByRelationAggregateInput
    calificacion?: CalificacionOrderByWithRelationInput
  }

  export type PedidoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    estado?: StringFilter<"Pedido"> | string
    total?: FloatFilter<"Pedido"> | number
    usuarioId?: StringFilter<"Pedido"> | string
    direccionEntrega?: JsonFilter<"Pedido">
    repartidorId?: StringFilter<"Pedido"> | string
    fechaDeCreacion?: DateTimeFilter<"Pedido"> | Date | string
    productos?: ProductoPedidoCompositeListFilter | ProductoPedidoObjectEqualityInput[]
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    repartidor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    mensajes?: MensajeListRelationFilter
    calificacion?: XOR<CalificacionNullableScalarRelationFilter, CalificacionWhereInput> | null
  }, "id">

  export type PedidoOrderByWithAggregationInput = {
    id?: SortOrder
    estado?: SortOrder
    total?: SortOrder
    usuarioId?: SortOrder
    direccionEntrega?: SortOrder
    repartidorId?: SortOrder
    fechaDeCreacion?: SortOrder
    _count?: PedidoCountOrderByAggregateInput
    _avg?: PedidoAvgOrderByAggregateInput
    _max?: PedidoMaxOrderByAggregateInput
    _min?: PedidoMinOrderByAggregateInput
    _sum?: PedidoSumOrderByAggregateInput
  }

  export type PedidoScalarWhereWithAggregatesInput = {
    AND?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    OR?: PedidoScalarWhereWithAggregatesInput[]
    NOT?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Pedido"> | string
    estado?: StringWithAggregatesFilter<"Pedido"> | string
    total?: FloatWithAggregatesFilter<"Pedido"> | number
    usuarioId?: StringWithAggregatesFilter<"Pedido"> | string
    direccionEntrega?: JsonWithAggregatesFilter<"Pedido">
    repartidorId?: StringWithAggregatesFilter<"Pedido"> | string
    fechaDeCreacion?: DateTimeWithAggregatesFilter<"Pedido"> | Date | string
  }

  export type RestauranteWhereInput = {
    AND?: RestauranteWhereInput | RestauranteWhereInput[]
    OR?: RestauranteWhereInput[]
    NOT?: RestauranteWhereInput | RestauranteWhereInput[]
    id?: StringFilter<"Restaurante"> | string
    nombre?: StringFilter<"Restaurante"> | string
    ubicaciones?: UbicacionCompositeListFilter | UbicacionObjectEqualityInput[]
    productos?: ProductoListRelationFilter
  }

  export type RestauranteOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    ubicaciones?: UbicacionOrderByCompositeAggregateInput
    productos?: ProductoOrderByRelationAggregateInput
  }

  export type RestauranteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RestauranteWhereInput | RestauranteWhereInput[]
    OR?: RestauranteWhereInput[]
    NOT?: RestauranteWhereInput | RestauranteWhereInput[]
    nombre?: StringFilter<"Restaurante"> | string
    ubicaciones?: UbicacionCompositeListFilter | UbicacionObjectEqualityInput[]
    productos?: ProductoListRelationFilter
  }, "id">

  export type RestauranteOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: RestauranteCountOrderByAggregateInput
    _max?: RestauranteMaxOrderByAggregateInput
    _min?: RestauranteMinOrderByAggregateInput
  }

  export type RestauranteScalarWhereWithAggregatesInput = {
    AND?: RestauranteScalarWhereWithAggregatesInput | RestauranteScalarWhereWithAggregatesInput[]
    OR?: RestauranteScalarWhereWithAggregatesInput[]
    NOT?: RestauranteScalarWhereWithAggregatesInput | RestauranteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Restaurante"> | string
    nombre?: StringWithAggregatesFilter<"Restaurante"> | string
  }

  export type ProductoWhereInput = {
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    id?: StringFilter<"Producto"> | string
    nombre?: StringFilter<"Producto"> | string
    precio?: FloatFilter<"Producto"> | number
    especificaciones?: StringFilter<"Producto"> | string
    restauranteId?: StringFilter<"Producto"> | string
    restaurante?: XOR<RestauranteScalarRelationFilter, RestauranteWhereInput>
  }

  export type ProductoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    especificaciones?: SortOrder
    restauranteId?: SortOrder
    restaurante?: RestauranteOrderByWithRelationInput
  }

  export type ProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    nombre?: StringFilter<"Producto"> | string
    precio?: FloatFilter<"Producto"> | number
    especificaciones?: StringFilter<"Producto"> | string
    restauranteId?: StringFilter<"Producto"> | string
    restaurante?: XOR<RestauranteScalarRelationFilter, RestauranteWhereInput>
  }, "id">

  export type ProductoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    especificaciones?: SortOrder
    restauranteId?: SortOrder
    _count?: ProductoCountOrderByAggregateInput
    _avg?: ProductoAvgOrderByAggregateInput
    _max?: ProductoMaxOrderByAggregateInput
    _min?: ProductoMinOrderByAggregateInput
    _sum?: ProductoSumOrderByAggregateInput
  }

  export type ProductoScalarWhereWithAggregatesInput = {
    AND?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    OR?: ProductoScalarWhereWithAggregatesInput[]
    NOT?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Producto"> | string
    nombre?: StringWithAggregatesFilter<"Producto"> | string
    precio?: FloatWithAggregatesFilter<"Producto"> | number
    especificaciones?: StringWithAggregatesFilter<"Producto"> | string
    restauranteId?: StringWithAggregatesFilter<"Producto"> | string
  }

  export type CalificacionWhereInput = {
    AND?: CalificacionWhereInput | CalificacionWhereInput[]
    OR?: CalificacionWhereInput[]
    NOT?: CalificacionWhereInput | CalificacionWhereInput[]
    id?: StringFilter<"Calificacion"> | string
    calificacionRepartidor?: IntFilter<"Calificacion"> | number
    calificacionPedido?: IntFilter<"Calificacion"> | number
    comentarios?: StringNullableFilter<"Calificacion"> | string | null
    pedidoId?: StringFilter<"Calificacion"> | string
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
  }

  export type CalificacionOrderByWithRelationInput = {
    id?: SortOrder
    calificacionRepartidor?: SortOrder
    calificacionPedido?: SortOrder
    comentarios?: SortOrder
    pedidoId?: SortOrder
    pedido?: PedidoOrderByWithRelationInput
  }

  export type CalificacionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    pedidoId?: string
    AND?: CalificacionWhereInput | CalificacionWhereInput[]
    OR?: CalificacionWhereInput[]
    NOT?: CalificacionWhereInput | CalificacionWhereInput[]
    calificacionRepartidor?: IntFilter<"Calificacion"> | number
    calificacionPedido?: IntFilter<"Calificacion"> | number
    comentarios?: StringNullableFilter<"Calificacion"> | string | null
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
  }, "id" | "pedidoId">

  export type CalificacionOrderByWithAggregationInput = {
    id?: SortOrder
    calificacionRepartidor?: SortOrder
    calificacionPedido?: SortOrder
    comentarios?: SortOrder
    pedidoId?: SortOrder
    _count?: CalificacionCountOrderByAggregateInput
    _avg?: CalificacionAvgOrderByAggregateInput
    _max?: CalificacionMaxOrderByAggregateInput
    _min?: CalificacionMinOrderByAggregateInput
    _sum?: CalificacionSumOrderByAggregateInput
  }

  export type CalificacionScalarWhereWithAggregatesInput = {
    AND?: CalificacionScalarWhereWithAggregatesInput | CalificacionScalarWhereWithAggregatesInput[]
    OR?: CalificacionScalarWhereWithAggregatesInput[]
    NOT?: CalificacionScalarWhereWithAggregatesInput | CalificacionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Calificacion"> | string
    calificacionRepartidor?: IntWithAggregatesFilter<"Calificacion"> | number
    calificacionPedido?: IntWithAggregatesFilter<"Calificacion"> | number
    comentarios?: StringNullableWithAggregatesFilter<"Calificacion"> | string | null
    pedidoId?: StringWithAggregatesFilter<"Calificacion"> | string
  }

  export type MensajeWhereInput = {
    AND?: MensajeWhereInput | MensajeWhereInput[]
    OR?: MensajeWhereInput[]
    NOT?: MensajeWhereInput | MensajeWhereInput[]
    id?: StringFilter<"Mensaje"> | string
    pedidoId?: StringFilter<"Mensaje"> | string
    usuarioEmisorId?: StringFilter<"Mensaje"> | string
    usuarioReceptorId?: StringFilter<"Mensaje"> | string
    texto?: StringFilter<"Mensaje"> | string
    fechaEnvio?: DateTimeFilter<"Mensaje"> | Date | string
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    usuarioEmisor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    usuarioReceptor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }

  export type MensajeOrderByWithRelationInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    usuarioEmisorId?: SortOrder
    usuarioReceptorId?: SortOrder
    texto?: SortOrder
    fechaEnvio?: SortOrder
    pedido?: PedidoOrderByWithRelationInput
    usuarioEmisor?: UsuarioOrderByWithRelationInput
    usuarioReceptor?: UsuarioOrderByWithRelationInput
  }

  export type MensajeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MensajeWhereInput | MensajeWhereInput[]
    OR?: MensajeWhereInput[]
    NOT?: MensajeWhereInput | MensajeWhereInput[]
    pedidoId?: StringFilter<"Mensaje"> | string
    usuarioEmisorId?: StringFilter<"Mensaje"> | string
    usuarioReceptorId?: StringFilter<"Mensaje"> | string
    texto?: StringFilter<"Mensaje"> | string
    fechaEnvio?: DateTimeFilter<"Mensaje"> | Date | string
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
    usuarioEmisor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    usuarioReceptor?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
  }, "id">

  export type MensajeOrderByWithAggregationInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    usuarioEmisorId?: SortOrder
    usuarioReceptorId?: SortOrder
    texto?: SortOrder
    fechaEnvio?: SortOrder
    _count?: MensajeCountOrderByAggregateInput
    _max?: MensajeMaxOrderByAggregateInput
    _min?: MensajeMinOrderByAggregateInput
  }

  export type MensajeScalarWhereWithAggregatesInput = {
    AND?: MensajeScalarWhereWithAggregatesInput | MensajeScalarWhereWithAggregatesInput[]
    OR?: MensajeScalarWhereWithAggregatesInput[]
    NOT?: MensajeScalarWhereWithAggregatesInput | MensajeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Mensaje"> | string
    pedidoId?: StringWithAggregatesFilter<"Mensaje"> | string
    usuarioEmisorId?: StringWithAggregatesFilter<"Mensaje"> | string
    usuarioReceptorId?: StringWithAggregatesFilter<"Mensaje"> | string
    texto?: StringWithAggregatesFilter<"Mensaje"> | string
    fechaEnvio?: DateTimeWithAggregatesFilter<"Mensaje"> | Date | string
  }

  export type UsuarioCreateInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoCreateNestedManyWithoutUsuarioInput
    pedidosRepartidor?: PedidoCreateNestedManyWithoutRepartidorInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutUsuarioEmisorInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutUsuarioReceptorInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUncheckedCreateNestedManyWithoutUsuarioInput
    pedidosRepartidor?: PedidoUncheckedCreateNestedManyWithoutRepartidorInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutUsuarioEmisorInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutUsuarioReceptorInput
  }

  export type UsuarioUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUpdateManyWithoutUsuarioNestedInput
    pedidosRepartidor?: PedidoUpdateManyWithoutRepartidorNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutUsuarioEmisorNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutUsuarioReceptorNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUncheckedUpdateManyWithoutUsuarioNestedInput
    pedidosRepartidor?: PedidoUncheckedUpdateManyWithoutRepartidorNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutUsuarioEmisorNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutUsuarioReceptorNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
  }

  export type UsuarioUpdateManyMutationInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
  }

  export type UsuarioUncheckedUpdateManyInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
  }

  export type PedidoCreateInput = {
    id?: string
    estado: string
    total: number
    direccionEntrega: InputJsonValue
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    usuario: UsuarioCreateNestedOneWithoutPedidosClienteInput
    repartidor: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    mensajes?: MensajeCreateNestedManyWithoutPedidoInput
    calificacion?: CalificacionCreateNestedOneWithoutPedidoInput
  }

  export type PedidoUncheckedCreateInput = {
    id?: string
    estado: string
    total: number
    usuarioId: string
    direccionEntrega: InputJsonValue
    repartidorId: string
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    mensajes?: MensajeUncheckedCreateNestedManyWithoutPedidoInput
    calificacion?: CalificacionUncheckedCreateNestedOneWithoutPedidoInput
  }

  export type PedidoUpdateInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    direccionEntrega?: InputJsonValue | InputJsonValue
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    usuario?: UsuarioUpdateOneRequiredWithoutPedidosClienteNestedInput
    repartidor?: UsuarioUpdateOneRequiredWithoutPedidosRepartidorNestedInput
    mensajes?: MensajeUpdateManyWithoutPedidoNestedInput
    calificacion?: CalificacionUpdateOneWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    usuarioId?: StringFieldUpdateOperationsInput | string
    direccionEntrega?: InputJsonValue | InputJsonValue
    repartidorId?: StringFieldUpdateOperationsInput | string
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    mensajes?: MensajeUncheckedUpdateManyWithoutPedidoNestedInput
    calificacion?: CalificacionUncheckedUpdateOneWithoutPedidoNestedInput
  }

  export type PedidoCreateManyInput = {
    id?: string
    estado: string
    total: number
    usuarioId: string
    direccionEntrega: InputJsonValue
    repartidorId: string
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
  }

  export type PedidoUpdateManyMutationInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    direccionEntrega?: InputJsonValue | InputJsonValue
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
  }

  export type PedidoUncheckedUpdateManyInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    usuarioId?: StringFieldUpdateOperationsInput | string
    direccionEntrega?: InputJsonValue | InputJsonValue
    repartidorId?: StringFieldUpdateOperationsInput | string
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
  }

  export type RestauranteCreateInput = {
    id?: string
    nombre: string
    ubicaciones?: XOR<UbicacionListCreateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
    productos?: ProductoCreateNestedManyWithoutRestauranteInput
  }

  export type RestauranteUncheckedCreateInput = {
    id?: string
    nombre: string
    ubicaciones?: XOR<UbicacionListCreateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
    productos?: ProductoUncheckedCreateNestedManyWithoutRestauranteInput
  }

  export type RestauranteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ubicaciones?: XOR<UbicacionListUpdateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
    productos?: ProductoUpdateManyWithoutRestauranteNestedInput
  }

  export type RestauranteUncheckedUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ubicaciones?: XOR<UbicacionListUpdateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
    productos?: ProductoUncheckedUpdateManyWithoutRestauranteNestedInput
  }

  export type RestauranteCreateManyInput = {
    id?: string
    nombre: string
    ubicaciones?: XOR<UbicacionListCreateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
  }

  export type RestauranteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ubicaciones?: XOR<UbicacionListUpdateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
  }

  export type RestauranteUncheckedUpdateManyInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ubicaciones?: XOR<UbicacionListUpdateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
  }

  export type ProductoCreateInput = {
    id?: string
    nombre: string
    precio: number
    especificaciones: string
    restaurante: RestauranteCreateNestedOneWithoutProductosInput
  }

  export type ProductoUncheckedCreateInput = {
    id?: string
    nombre: string
    precio: number
    especificaciones: string
    restauranteId: string
  }

  export type ProductoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    especificaciones?: StringFieldUpdateOperationsInput | string
    restaurante?: RestauranteUpdateOneRequiredWithoutProductosNestedInput
  }

  export type ProductoUncheckedUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    especificaciones?: StringFieldUpdateOperationsInput | string
    restauranteId?: StringFieldUpdateOperationsInput | string
  }

  export type ProductoCreateManyInput = {
    id?: string
    nombre: string
    precio: number
    especificaciones: string
    restauranteId: string
  }

  export type ProductoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    especificaciones?: StringFieldUpdateOperationsInput | string
  }

  export type ProductoUncheckedUpdateManyInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    especificaciones?: StringFieldUpdateOperationsInput | string
    restauranteId?: StringFieldUpdateOperationsInput | string
  }

  export type CalificacionCreateInput = {
    id?: string
    calificacionRepartidor: number
    calificacionPedido: number
    comentarios?: string | null
    pedido: PedidoCreateNestedOneWithoutCalificacionInput
  }

  export type CalificacionUncheckedCreateInput = {
    id?: string
    calificacionRepartidor: number
    calificacionPedido: number
    comentarios?: string | null
    pedidoId: string
  }

  export type CalificacionUpdateInput = {
    calificacionRepartidor?: IntFieldUpdateOperationsInput | number
    calificacionPedido?: IntFieldUpdateOperationsInput | number
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    pedido?: PedidoUpdateOneRequiredWithoutCalificacionNestedInput
  }

  export type CalificacionUncheckedUpdateInput = {
    calificacionRepartidor?: IntFieldUpdateOperationsInput | number
    calificacionPedido?: IntFieldUpdateOperationsInput | number
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    pedidoId?: StringFieldUpdateOperationsInput | string
  }

  export type CalificacionCreateManyInput = {
    id?: string
    calificacionRepartidor: number
    calificacionPedido: number
    comentarios?: string | null
    pedidoId: string
  }

  export type CalificacionUpdateManyMutationInput = {
    calificacionRepartidor?: IntFieldUpdateOperationsInput | number
    calificacionPedido?: IntFieldUpdateOperationsInput | number
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CalificacionUncheckedUpdateManyInput = {
    calificacionRepartidor?: IntFieldUpdateOperationsInput | number
    calificacionPedido?: IntFieldUpdateOperationsInput | number
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
    pedidoId?: StringFieldUpdateOperationsInput | string
  }

  export type MensajeCreateInput = {
    id?: string
    texto: string
    fechaEnvio: Date | string
    pedido: PedidoCreateNestedOneWithoutMensajesInput
    usuarioEmisor: UsuarioCreateNestedOneWithoutMensajesEnviadosInput
    usuarioReceptor: UsuarioCreateNestedOneWithoutMensajesRecibidosInput
  }

  export type MensajeUncheckedCreateInput = {
    id?: string
    pedidoId: string
    usuarioEmisorId: string
    usuarioReceptorId: string
    texto: string
    fechaEnvio: Date | string
  }

  export type MensajeUpdateInput = {
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    pedido?: PedidoUpdateOneRequiredWithoutMensajesNestedInput
    usuarioEmisor?: UsuarioUpdateOneRequiredWithoutMensajesEnviadosNestedInput
    usuarioReceptor?: UsuarioUpdateOneRequiredWithoutMensajesRecibidosNestedInput
  }

  export type MensajeUncheckedUpdateInput = {
    pedidoId?: StringFieldUpdateOperationsInput | string
    usuarioEmisorId?: StringFieldUpdateOperationsInput | string
    usuarioReceptorId?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensajeCreateManyInput = {
    id?: string
    pedidoId: string
    usuarioEmisorId: string
    usuarioReceptorId: string
    texto: string
    fechaEnvio: Date | string
  }

  export type MensajeUpdateManyMutationInput = {
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensajeUncheckedUpdateManyInput = {
    pedidoId?: StringFieldUpdateOperationsInput | string
    usuarioEmisorId?: StringFieldUpdateOperationsInput | string
    usuarioReceptorId?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
    isSet?: boolean
  }

  export type HistorialDireccionCompositeListFilter = {
    equals?: HistorialDireccionObjectEqualityInput[]
    every?: HistorialDireccionWhereInput
    some?: HistorialDireccionWhereInput
    none?: HistorialDireccionWhereInput
    isEmpty?: boolean
    isSet?: boolean
  }

  export type HistorialDireccionObjectEqualityInput = {
    comuna: number
    barrio: string
    direccionEspecifica: string
  }

  export type PedidoListRelationFilter = {
    every?: PedidoWhereInput
    some?: PedidoWhereInput
    none?: PedidoWhereInput
  }

  export type MensajeListRelationFilter = {
    every?: MensajeWhereInput
    some?: MensajeWhereInput
    none?: MensajeWhereInput
  }

  export type HistorialDireccionOrderByCompositeAggregateInput = {
    _count?: SortOrder
  }

  export type PedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MensajeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    contraseña?: SortOrder
    rol?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    cedula?: SortOrder
    email?: SortOrder
    vehiculo?: SortOrder
    resetToken?: SortOrder
    resetTokenExpiry?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    telefono?: SortOrder
    cedula?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    contraseña?: SortOrder
    rol?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    cedula?: SortOrder
    email?: SortOrder
    vehiculo?: SortOrder
    resetToken?: SortOrder
    resetTokenExpiry?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombreCompleto?: SortOrder
    contraseña?: SortOrder
    rol?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    cedula?: SortOrder
    email?: SortOrder
    vehiculo?: SortOrder
    resetToken?: SortOrder
    resetTokenExpiry?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    telefono?: SortOrder
    cedula?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ProductoPedidoCompositeListFilter = {
    equals?: ProductoPedidoObjectEqualityInput[]
    every?: ProductoPedidoWhereInput
    some?: ProductoPedidoWhereInput
    none?: ProductoPedidoWhereInput
    isEmpty?: boolean
    isSet?: boolean
  }

  export type ProductoPedidoObjectEqualityInput = {
    productoId: string
    cantidad: number
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type CalificacionNullableScalarRelationFilter = {
    is?: CalificacionWhereInput | null
    isNot?: CalificacionWhereInput | null
  }

  export type ProductoPedidoOrderByCompositeAggregateInput = {
    _count?: SortOrder
  }

  export type PedidoCountOrderByAggregateInput = {
    id?: SortOrder
    estado?: SortOrder
    total?: SortOrder
    usuarioId?: SortOrder
    direccionEntrega?: SortOrder
    repartidorId?: SortOrder
    fechaDeCreacion?: SortOrder
  }

  export type PedidoAvgOrderByAggregateInput = {
    total?: SortOrder
  }

  export type PedidoMaxOrderByAggregateInput = {
    id?: SortOrder
    estado?: SortOrder
    total?: SortOrder
    usuarioId?: SortOrder
    repartidorId?: SortOrder
    fechaDeCreacion?: SortOrder
  }

  export type PedidoMinOrderByAggregateInput = {
    id?: SortOrder
    estado?: SortOrder
    total?: SortOrder
    usuarioId?: SortOrder
    repartidorId?: SortOrder
    fechaDeCreacion?: SortOrder
  }

  export type PedidoSumOrderByAggregateInput = {
    total?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UbicacionCompositeListFilter = {
    equals?: UbicacionObjectEqualityInput[]
    every?: UbicacionWhereInput
    some?: UbicacionWhereInput
    none?: UbicacionWhereInput
    isEmpty?: boolean
    isSet?: boolean
  }

  export type UbicacionObjectEqualityInput = {
    sucursalId: string
    comuna: string
  }

  export type ProductoListRelationFilter = {
    every?: ProductoWhereInput
    some?: ProductoWhereInput
    none?: ProductoWhereInput
  }

  export type UbicacionOrderByCompositeAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RestauranteCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type RestauranteMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type RestauranteMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type RestauranteScalarRelationFilter = {
    is?: RestauranteWhereInput
    isNot?: RestauranteWhereInput
  }

  export type ProductoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    especificaciones?: SortOrder
    restauranteId?: SortOrder
  }

  export type ProductoAvgOrderByAggregateInput = {
    precio?: SortOrder
  }

  export type ProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    especificaciones?: SortOrder
    restauranteId?: SortOrder
  }

  export type ProductoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    precio?: SortOrder
    especificaciones?: SortOrder
    restauranteId?: SortOrder
  }

  export type ProductoSumOrderByAggregateInput = {
    precio?: SortOrder
  }

  export type PedidoScalarRelationFilter = {
    is?: PedidoWhereInput
    isNot?: PedidoWhereInput
  }

  export type CalificacionCountOrderByAggregateInput = {
    id?: SortOrder
    calificacionRepartidor?: SortOrder
    calificacionPedido?: SortOrder
    comentarios?: SortOrder
    pedidoId?: SortOrder
  }

  export type CalificacionAvgOrderByAggregateInput = {
    calificacionRepartidor?: SortOrder
    calificacionPedido?: SortOrder
  }

  export type CalificacionMaxOrderByAggregateInput = {
    id?: SortOrder
    calificacionRepartidor?: SortOrder
    calificacionPedido?: SortOrder
    comentarios?: SortOrder
    pedidoId?: SortOrder
  }

  export type CalificacionMinOrderByAggregateInput = {
    id?: SortOrder
    calificacionRepartidor?: SortOrder
    calificacionPedido?: SortOrder
    comentarios?: SortOrder
    pedidoId?: SortOrder
  }

  export type CalificacionSumOrderByAggregateInput = {
    calificacionRepartidor?: SortOrder
    calificacionPedido?: SortOrder
  }

  export type MensajeCountOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    usuarioEmisorId?: SortOrder
    usuarioReceptorId?: SortOrder
    texto?: SortOrder
    fechaEnvio?: SortOrder
  }

  export type MensajeMaxOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    usuarioEmisorId?: SortOrder
    usuarioReceptorId?: SortOrder
    texto?: SortOrder
    fechaEnvio?: SortOrder
  }

  export type MensajeMinOrderByAggregateInput = {
    id?: SortOrder
    pedidoId?: SortOrder
    usuarioEmisorId?: SortOrder
    usuarioReceptorId?: SortOrder
    texto?: SortOrder
    fechaEnvio?: SortOrder
  }

  export type HistorialDireccionListCreateEnvelopeInput = {
    set?: HistorialDireccionCreateInput | HistorialDireccionCreateInput[]
  }

  export type HistorialDireccionCreateInput = {
    comuna: number
    barrio: string
    direccionEspecifica: string
  }

  export type PedidoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<PedidoCreateWithoutUsuarioInput, PedidoUncheckedCreateWithoutUsuarioInput> | PedidoCreateWithoutUsuarioInput[] | PedidoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutUsuarioInput | PedidoCreateOrConnectWithoutUsuarioInput[]
    createMany?: PedidoCreateManyUsuarioInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type PedidoCreateNestedManyWithoutRepartidorInput = {
    create?: XOR<PedidoCreateWithoutRepartidorInput, PedidoUncheckedCreateWithoutRepartidorInput> | PedidoCreateWithoutRepartidorInput[] | PedidoUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutRepartidorInput | PedidoCreateOrConnectWithoutRepartidorInput[]
    createMany?: PedidoCreateManyRepartidorInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type MensajeCreateNestedManyWithoutUsuarioEmisorInput = {
    create?: XOR<MensajeCreateWithoutUsuarioEmisorInput, MensajeUncheckedCreateWithoutUsuarioEmisorInput> | MensajeCreateWithoutUsuarioEmisorInput[] | MensajeUncheckedCreateWithoutUsuarioEmisorInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutUsuarioEmisorInput | MensajeCreateOrConnectWithoutUsuarioEmisorInput[]
    createMany?: MensajeCreateManyUsuarioEmisorInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type MensajeCreateNestedManyWithoutUsuarioReceptorInput = {
    create?: XOR<MensajeCreateWithoutUsuarioReceptorInput, MensajeUncheckedCreateWithoutUsuarioReceptorInput> | MensajeCreateWithoutUsuarioReceptorInput[] | MensajeUncheckedCreateWithoutUsuarioReceptorInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutUsuarioReceptorInput | MensajeCreateOrConnectWithoutUsuarioReceptorInput[]
    createMany?: MensajeCreateManyUsuarioReceptorInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<PedidoCreateWithoutUsuarioInput, PedidoUncheckedCreateWithoutUsuarioInput> | PedidoCreateWithoutUsuarioInput[] | PedidoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutUsuarioInput | PedidoCreateOrConnectWithoutUsuarioInput[]
    createMany?: PedidoCreateManyUsuarioInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedManyWithoutRepartidorInput = {
    create?: XOR<PedidoCreateWithoutRepartidorInput, PedidoUncheckedCreateWithoutRepartidorInput> | PedidoCreateWithoutRepartidorInput[] | PedidoUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutRepartidorInput | PedidoCreateOrConnectWithoutRepartidorInput[]
    createMany?: PedidoCreateManyRepartidorInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type MensajeUncheckedCreateNestedManyWithoutUsuarioEmisorInput = {
    create?: XOR<MensajeCreateWithoutUsuarioEmisorInput, MensajeUncheckedCreateWithoutUsuarioEmisorInput> | MensajeCreateWithoutUsuarioEmisorInput[] | MensajeUncheckedCreateWithoutUsuarioEmisorInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutUsuarioEmisorInput | MensajeCreateOrConnectWithoutUsuarioEmisorInput[]
    createMany?: MensajeCreateManyUsuarioEmisorInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type MensajeUncheckedCreateNestedManyWithoutUsuarioReceptorInput = {
    create?: XOR<MensajeCreateWithoutUsuarioReceptorInput, MensajeUncheckedCreateWithoutUsuarioReceptorInput> | MensajeCreateWithoutUsuarioReceptorInput[] | MensajeUncheckedCreateWithoutUsuarioReceptorInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutUsuarioReceptorInput | MensajeCreateOrConnectWithoutUsuarioReceptorInput[]
    createMany?: MensajeCreateManyUsuarioReceptorInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
    unset?: boolean
  }

  export type HistorialDireccionListUpdateEnvelopeInput = {
    set?: HistorialDireccionCreateInput | HistorialDireccionCreateInput[]
    push?: HistorialDireccionCreateInput | HistorialDireccionCreateInput[]
    updateMany?: HistorialDireccionUpdateManyInput
    deleteMany?: HistorialDireccionDeleteManyInput
  }

  export type PedidoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<PedidoCreateWithoutUsuarioInput, PedidoUncheckedCreateWithoutUsuarioInput> | PedidoCreateWithoutUsuarioInput[] | PedidoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutUsuarioInput | PedidoCreateOrConnectWithoutUsuarioInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutUsuarioInput | PedidoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: PedidoCreateManyUsuarioInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutUsuarioInput | PedidoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutUsuarioInput | PedidoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type PedidoUpdateManyWithoutRepartidorNestedInput = {
    create?: XOR<PedidoCreateWithoutRepartidorInput, PedidoUncheckedCreateWithoutRepartidorInput> | PedidoCreateWithoutRepartidorInput[] | PedidoUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutRepartidorInput | PedidoCreateOrConnectWithoutRepartidorInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutRepartidorInput | PedidoUpsertWithWhereUniqueWithoutRepartidorInput[]
    createMany?: PedidoCreateManyRepartidorInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutRepartidorInput | PedidoUpdateWithWhereUniqueWithoutRepartidorInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutRepartidorInput | PedidoUpdateManyWithWhereWithoutRepartidorInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type MensajeUpdateManyWithoutUsuarioEmisorNestedInput = {
    create?: XOR<MensajeCreateWithoutUsuarioEmisorInput, MensajeUncheckedCreateWithoutUsuarioEmisorInput> | MensajeCreateWithoutUsuarioEmisorInput[] | MensajeUncheckedCreateWithoutUsuarioEmisorInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutUsuarioEmisorInput | MensajeCreateOrConnectWithoutUsuarioEmisorInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutUsuarioEmisorInput | MensajeUpsertWithWhereUniqueWithoutUsuarioEmisorInput[]
    createMany?: MensajeCreateManyUsuarioEmisorInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutUsuarioEmisorInput | MensajeUpdateWithWhereUniqueWithoutUsuarioEmisorInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutUsuarioEmisorInput | MensajeUpdateManyWithWhereWithoutUsuarioEmisorInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type MensajeUpdateManyWithoutUsuarioReceptorNestedInput = {
    create?: XOR<MensajeCreateWithoutUsuarioReceptorInput, MensajeUncheckedCreateWithoutUsuarioReceptorInput> | MensajeCreateWithoutUsuarioReceptorInput[] | MensajeUncheckedCreateWithoutUsuarioReceptorInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutUsuarioReceptorInput | MensajeCreateOrConnectWithoutUsuarioReceptorInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutUsuarioReceptorInput | MensajeUpsertWithWhereUniqueWithoutUsuarioReceptorInput[]
    createMany?: MensajeCreateManyUsuarioReceptorInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutUsuarioReceptorInput | MensajeUpdateWithWhereUniqueWithoutUsuarioReceptorInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutUsuarioReceptorInput | MensajeUpdateManyWithWhereWithoutUsuarioReceptorInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type PedidoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<PedidoCreateWithoutUsuarioInput, PedidoUncheckedCreateWithoutUsuarioInput> | PedidoCreateWithoutUsuarioInput[] | PedidoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutUsuarioInput | PedidoCreateOrConnectWithoutUsuarioInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutUsuarioInput | PedidoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: PedidoCreateManyUsuarioInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutUsuarioInput | PedidoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutUsuarioInput | PedidoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type PedidoUncheckedUpdateManyWithoutRepartidorNestedInput = {
    create?: XOR<PedidoCreateWithoutRepartidorInput, PedidoUncheckedCreateWithoutRepartidorInput> | PedidoCreateWithoutRepartidorInput[] | PedidoUncheckedCreateWithoutRepartidorInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutRepartidorInput | PedidoCreateOrConnectWithoutRepartidorInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutRepartidorInput | PedidoUpsertWithWhereUniqueWithoutRepartidorInput[]
    createMany?: PedidoCreateManyRepartidorInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutRepartidorInput | PedidoUpdateWithWhereUniqueWithoutRepartidorInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutRepartidorInput | PedidoUpdateManyWithWhereWithoutRepartidorInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type MensajeUncheckedUpdateManyWithoutUsuarioEmisorNestedInput = {
    create?: XOR<MensajeCreateWithoutUsuarioEmisorInput, MensajeUncheckedCreateWithoutUsuarioEmisorInput> | MensajeCreateWithoutUsuarioEmisorInput[] | MensajeUncheckedCreateWithoutUsuarioEmisorInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutUsuarioEmisorInput | MensajeCreateOrConnectWithoutUsuarioEmisorInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutUsuarioEmisorInput | MensajeUpsertWithWhereUniqueWithoutUsuarioEmisorInput[]
    createMany?: MensajeCreateManyUsuarioEmisorInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutUsuarioEmisorInput | MensajeUpdateWithWhereUniqueWithoutUsuarioEmisorInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutUsuarioEmisorInput | MensajeUpdateManyWithWhereWithoutUsuarioEmisorInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type MensajeUncheckedUpdateManyWithoutUsuarioReceptorNestedInput = {
    create?: XOR<MensajeCreateWithoutUsuarioReceptorInput, MensajeUncheckedCreateWithoutUsuarioReceptorInput> | MensajeCreateWithoutUsuarioReceptorInput[] | MensajeUncheckedCreateWithoutUsuarioReceptorInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutUsuarioReceptorInput | MensajeCreateOrConnectWithoutUsuarioReceptorInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutUsuarioReceptorInput | MensajeUpsertWithWhereUniqueWithoutUsuarioReceptorInput[]
    createMany?: MensajeCreateManyUsuarioReceptorInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutUsuarioReceptorInput | MensajeUpdateWithWhereUniqueWithoutUsuarioReceptorInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutUsuarioReceptorInput | MensajeUpdateManyWithWhereWithoutUsuarioReceptorInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type ProductoPedidoListCreateEnvelopeInput = {
    set?: ProductoPedidoCreateInput | ProductoPedidoCreateInput[]
  }

  export type ProductoPedidoCreateInput = {
    productoId: string
    cantidad: number
  }

  export type UsuarioCreateNestedOneWithoutPedidosClienteInput = {
    create?: XOR<UsuarioCreateWithoutPedidosClienteInput, UsuarioUncheckedCreateWithoutPedidosClienteInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPedidosClienteInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutPedidosRepartidorInput = {
    create?: XOR<UsuarioCreateWithoutPedidosRepartidorInput, UsuarioUncheckedCreateWithoutPedidosRepartidorInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPedidosRepartidorInput
    connect?: UsuarioWhereUniqueInput
  }

  export type MensajeCreateNestedManyWithoutPedidoInput = {
    create?: XOR<MensajeCreateWithoutPedidoInput, MensajeUncheckedCreateWithoutPedidoInput> | MensajeCreateWithoutPedidoInput[] | MensajeUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutPedidoInput | MensajeCreateOrConnectWithoutPedidoInput[]
    createMany?: MensajeCreateManyPedidoInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type CalificacionCreateNestedOneWithoutPedidoInput = {
    create?: XOR<CalificacionCreateWithoutPedidoInput, CalificacionUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CalificacionCreateOrConnectWithoutPedidoInput
    connect?: CalificacionWhereUniqueInput
  }

  export type MensajeUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<MensajeCreateWithoutPedidoInput, MensajeUncheckedCreateWithoutPedidoInput> | MensajeCreateWithoutPedidoInput[] | MensajeUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutPedidoInput | MensajeCreateOrConnectWithoutPedidoInput[]
    createMany?: MensajeCreateManyPedidoInputEnvelope
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
  }

  export type CalificacionUncheckedCreateNestedOneWithoutPedidoInput = {
    create?: XOR<CalificacionCreateWithoutPedidoInput, CalificacionUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CalificacionCreateOrConnectWithoutPedidoInput
    connect?: CalificacionWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type ProductoPedidoListUpdateEnvelopeInput = {
    set?: ProductoPedidoCreateInput | ProductoPedidoCreateInput[]
    push?: ProductoPedidoCreateInput | ProductoPedidoCreateInput[]
    updateMany?: ProductoPedidoUpdateManyInput
    deleteMany?: ProductoPedidoDeleteManyInput
  }

  export type UsuarioUpdateOneRequiredWithoutPedidosClienteNestedInput = {
    create?: XOR<UsuarioCreateWithoutPedidosClienteInput, UsuarioUncheckedCreateWithoutPedidosClienteInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPedidosClienteInput
    upsert?: UsuarioUpsertWithoutPedidosClienteInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPedidosClienteInput, UsuarioUpdateWithoutPedidosClienteInput>, UsuarioUncheckedUpdateWithoutPedidosClienteInput>
  }

  export type UsuarioUpdateOneRequiredWithoutPedidosRepartidorNestedInput = {
    create?: XOR<UsuarioCreateWithoutPedidosRepartidorInput, UsuarioUncheckedCreateWithoutPedidosRepartidorInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutPedidosRepartidorInput
    upsert?: UsuarioUpsertWithoutPedidosRepartidorInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutPedidosRepartidorInput, UsuarioUpdateWithoutPedidosRepartidorInput>, UsuarioUncheckedUpdateWithoutPedidosRepartidorInput>
  }

  export type MensajeUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<MensajeCreateWithoutPedidoInput, MensajeUncheckedCreateWithoutPedidoInput> | MensajeCreateWithoutPedidoInput[] | MensajeUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutPedidoInput | MensajeCreateOrConnectWithoutPedidoInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutPedidoInput | MensajeUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: MensajeCreateManyPedidoInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutPedidoInput | MensajeUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutPedidoInput | MensajeUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type CalificacionUpdateOneWithoutPedidoNestedInput = {
    create?: XOR<CalificacionCreateWithoutPedidoInput, CalificacionUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CalificacionCreateOrConnectWithoutPedidoInput
    upsert?: CalificacionUpsertWithoutPedidoInput
    disconnect?: CalificacionWhereInput | boolean
    delete?: CalificacionWhereInput | boolean
    connect?: CalificacionWhereUniqueInput
    update?: XOR<XOR<CalificacionUpdateToOneWithWhereWithoutPedidoInput, CalificacionUpdateWithoutPedidoInput>, CalificacionUncheckedUpdateWithoutPedidoInput>
  }

  export type MensajeUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<MensajeCreateWithoutPedidoInput, MensajeUncheckedCreateWithoutPedidoInput> | MensajeCreateWithoutPedidoInput[] | MensajeUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: MensajeCreateOrConnectWithoutPedidoInput | MensajeCreateOrConnectWithoutPedidoInput[]
    upsert?: MensajeUpsertWithWhereUniqueWithoutPedidoInput | MensajeUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: MensajeCreateManyPedidoInputEnvelope
    set?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    disconnect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    delete?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    connect?: MensajeWhereUniqueInput | MensajeWhereUniqueInput[]
    update?: MensajeUpdateWithWhereUniqueWithoutPedidoInput | MensajeUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: MensajeUpdateManyWithWhereWithoutPedidoInput | MensajeUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
  }

  export type CalificacionUncheckedUpdateOneWithoutPedidoNestedInput = {
    create?: XOR<CalificacionCreateWithoutPedidoInput, CalificacionUncheckedCreateWithoutPedidoInput>
    connectOrCreate?: CalificacionCreateOrConnectWithoutPedidoInput
    upsert?: CalificacionUpsertWithoutPedidoInput
    disconnect?: CalificacionWhereInput | boolean
    delete?: CalificacionWhereInput | boolean
    connect?: CalificacionWhereUniqueInput
    update?: XOR<XOR<CalificacionUpdateToOneWithWhereWithoutPedidoInput, CalificacionUpdateWithoutPedidoInput>, CalificacionUncheckedUpdateWithoutPedidoInput>
  }

  export type UbicacionListCreateEnvelopeInput = {
    set?: UbicacionCreateInput | UbicacionCreateInput[]
  }

  export type UbicacionCreateInput = {
    sucursalId: string
    comuna: string
  }

  export type ProductoCreateNestedManyWithoutRestauranteInput = {
    create?: XOR<ProductoCreateWithoutRestauranteInput, ProductoUncheckedCreateWithoutRestauranteInput> | ProductoCreateWithoutRestauranteInput[] | ProductoUncheckedCreateWithoutRestauranteInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutRestauranteInput | ProductoCreateOrConnectWithoutRestauranteInput[]
    createMany?: ProductoCreateManyRestauranteInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutRestauranteInput = {
    create?: XOR<ProductoCreateWithoutRestauranteInput, ProductoUncheckedCreateWithoutRestauranteInput> | ProductoCreateWithoutRestauranteInput[] | ProductoUncheckedCreateWithoutRestauranteInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutRestauranteInput | ProductoCreateOrConnectWithoutRestauranteInput[]
    createMany?: ProductoCreateManyRestauranteInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type UbicacionListUpdateEnvelopeInput = {
    set?: UbicacionCreateInput | UbicacionCreateInput[]
    push?: UbicacionCreateInput | UbicacionCreateInput[]
    updateMany?: UbicacionUpdateManyInput
    deleteMany?: UbicacionDeleteManyInput
  }

  export type ProductoUpdateManyWithoutRestauranteNestedInput = {
    create?: XOR<ProductoCreateWithoutRestauranteInput, ProductoUncheckedCreateWithoutRestauranteInput> | ProductoCreateWithoutRestauranteInput[] | ProductoUncheckedCreateWithoutRestauranteInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutRestauranteInput | ProductoCreateOrConnectWithoutRestauranteInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutRestauranteInput | ProductoUpsertWithWhereUniqueWithoutRestauranteInput[]
    createMany?: ProductoCreateManyRestauranteInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutRestauranteInput | ProductoUpdateWithWhereUniqueWithoutRestauranteInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutRestauranteInput | ProductoUpdateManyWithWhereWithoutRestauranteInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutRestauranteNestedInput = {
    create?: XOR<ProductoCreateWithoutRestauranteInput, ProductoUncheckedCreateWithoutRestauranteInput> | ProductoCreateWithoutRestauranteInput[] | ProductoUncheckedCreateWithoutRestauranteInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutRestauranteInput | ProductoCreateOrConnectWithoutRestauranteInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutRestauranteInput | ProductoUpsertWithWhereUniqueWithoutRestauranteInput[]
    createMany?: ProductoCreateManyRestauranteInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutRestauranteInput | ProductoUpdateWithWhereUniqueWithoutRestauranteInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutRestauranteInput | ProductoUpdateManyWithWhereWithoutRestauranteInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type RestauranteCreateNestedOneWithoutProductosInput = {
    create?: XOR<RestauranteCreateWithoutProductosInput, RestauranteUncheckedCreateWithoutProductosInput>
    connectOrCreate?: RestauranteCreateOrConnectWithoutProductosInput
    connect?: RestauranteWhereUniqueInput
  }

  export type RestauranteUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<RestauranteCreateWithoutProductosInput, RestauranteUncheckedCreateWithoutProductosInput>
    connectOrCreate?: RestauranteCreateOrConnectWithoutProductosInput
    upsert?: RestauranteUpsertWithoutProductosInput
    connect?: RestauranteWhereUniqueInput
    update?: XOR<XOR<RestauranteUpdateToOneWithWhereWithoutProductosInput, RestauranteUpdateWithoutProductosInput>, RestauranteUncheckedUpdateWithoutProductosInput>
  }

  export type PedidoCreateNestedOneWithoutCalificacionInput = {
    create?: XOR<PedidoCreateWithoutCalificacionInput, PedidoUncheckedCreateWithoutCalificacionInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutCalificacionInput
    connect?: PedidoWhereUniqueInput
  }

  export type PedidoUpdateOneRequiredWithoutCalificacionNestedInput = {
    create?: XOR<PedidoCreateWithoutCalificacionInput, PedidoUncheckedCreateWithoutCalificacionInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutCalificacionInput
    upsert?: PedidoUpsertWithoutCalificacionInput
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutCalificacionInput, PedidoUpdateWithoutCalificacionInput>, PedidoUncheckedUpdateWithoutCalificacionInput>
  }

  export type PedidoCreateNestedOneWithoutMensajesInput = {
    create?: XOR<PedidoCreateWithoutMensajesInput, PedidoUncheckedCreateWithoutMensajesInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutMensajesInput
    connect?: PedidoWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutMensajesEnviadosInput = {
    create?: XOR<UsuarioCreateWithoutMensajesEnviadosInput, UsuarioUncheckedCreateWithoutMensajesEnviadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMensajesEnviadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutMensajesRecibidosInput = {
    create?: XOR<UsuarioCreateWithoutMensajesRecibidosInput, UsuarioUncheckedCreateWithoutMensajesRecibidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMensajesRecibidosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type PedidoUpdateOneRequiredWithoutMensajesNestedInput = {
    create?: XOR<PedidoCreateWithoutMensajesInput, PedidoUncheckedCreateWithoutMensajesInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutMensajesInput
    upsert?: PedidoUpsertWithoutMensajesInput
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutMensajesInput, PedidoUpdateWithoutMensajesInput>, PedidoUncheckedUpdateWithoutMensajesInput>
  }

  export type UsuarioUpdateOneRequiredWithoutMensajesEnviadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutMensajesEnviadosInput, UsuarioUncheckedCreateWithoutMensajesEnviadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMensajesEnviadosInput
    upsert?: UsuarioUpsertWithoutMensajesEnviadosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutMensajesEnviadosInput, UsuarioUpdateWithoutMensajesEnviadosInput>, UsuarioUncheckedUpdateWithoutMensajesEnviadosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutMensajesRecibidosNestedInput = {
    create?: XOR<UsuarioCreateWithoutMensajesRecibidosInput, UsuarioUncheckedCreateWithoutMensajesRecibidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutMensajesRecibidosInput
    upsert?: UsuarioUpsertWithoutMensajesRecibidosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutMensajesRecibidosInput, UsuarioUpdateWithoutMensajesRecibidosInput>, UsuarioUncheckedUpdateWithoutMensajesRecibidosInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
    isSet?: boolean
  }

  export type HistorialDireccionWhereInput = {
    AND?: HistorialDireccionWhereInput | HistorialDireccionWhereInput[]
    OR?: HistorialDireccionWhereInput[]
    NOT?: HistorialDireccionWhereInput | HistorialDireccionWhereInput[]
    comuna?: IntFilter<"HistorialDireccion"> | number
    barrio?: StringFilter<"HistorialDireccion"> | string
    direccionEspecifica?: StringFilter<"HistorialDireccion"> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
    isSet?: boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ProductoPedidoWhereInput = {
    AND?: ProductoPedidoWhereInput | ProductoPedidoWhereInput[]
    OR?: ProductoPedidoWhereInput[]
    NOT?: ProductoPedidoWhereInput | ProductoPedidoWhereInput[]
    productoId?: StringFilter<"ProductoPedido"> | string
    cantidad?: IntFilter<"ProductoPedido"> | number
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UbicacionWhereInput = {
    AND?: UbicacionWhereInput | UbicacionWhereInput[]
    OR?: UbicacionWhereInput[]
    NOT?: UbicacionWhereInput | UbicacionWhereInput[]
    sucursalId?: StringFilter<"Ubicacion"> | string
    comuna?: StringFilter<"Ubicacion"> | string
  }

  export type PedidoCreateWithoutUsuarioInput = {
    id?: string
    estado: string
    total: number
    direccionEntrega: InputJsonValue
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    repartidor: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    mensajes?: MensajeCreateNestedManyWithoutPedidoInput
    calificacion?: CalificacionCreateNestedOneWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutUsuarioInput = {
    id?: string
    estado: string
    total: number
    direccionEntrega: InputJsonValue
    repartidorId: string
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    mensajes?: MensajeUncheckedCreateNestedManyWithoutPedidoInput
    calificacion?: CalificacionUncheckedCreateNestedOneWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutUsuarioInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutUsuarioInput, PedidoUncheckedCreateWithoutUsuarioInput>
  }

  export type PedidoCreateManyUsuarioInputEnvelope = {
    data: PedidoCreateManyUsuarioInput | PedidoCreateManyUsuarioInput[]
  }

  export type PedidoCreateWithoutRepartidorInput = {
    id?: string
    estado: string
    total: number
    direccionEntrega: InputJsonValue
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    usuario: UsuarioCreateNestedOneWithoutPedidosClienteInput
    mensajes?: MensajeCreateNestedManyWithoutPedidoInput
    calificacion?: CalificacionCreateNestedOneWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutRepartidorInput = {
    id?: string
    estado: string
    total: number
    usuarioId: string
    direccionEntrega: InputJsonValue
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    mensajes?: MensajeUncheckedCreateNestedManyWithoutPedidoInput
    calificacion?: CalificacionUncheckedCreateNestedOneWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutRepartidorInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutRepartidorInput, PedidoUncheckedCreateWithoutRepartidorInput>
  }

  export type PedidoCreateManyRepartidorInputEnvelope = {
    data: PedidoCreateManyRepartidorInput | PedidoCreateManyRepartidorInput[]
  }

  export type MensajeCreateWithoutUsuarioEmisorInput = {
    id?: string
    texto: string
    fechaEnvio: Date | string
    pedido: PedidoCreateNestedOneWithoutMensajesInput
    usuarioReceptor: UsuarioCreateNestedOneWithoutMensajesRecibidosInput
  }

  export type MensajeUncheckedCreateWithoutUsuarioEmisorInput = {
    id?: string
    pedidoId: string
    usuarioReceptorId: string
    texto: string
    fechaEnvio: Date | string
  }

  export type MensajeCreateOrConnectWithoutUsuarioEmisorInput = {
    where: MensajeWhereUniqueInput
    create: XOR<MensajeCreateWithoutUsuarioEmisorInput, MensajeUncheckedCreateWithoutUsuarioEmisorInput>
  }

  export type MensajeCreateManyUsuarioEmisorInputEnvelope = {
    data: MensajeCreateManyUsuarioEmisorInput | MensajeCreateManyUsuarioEmisorInput[]
  }

  export type MensajeCreateWithoutUsuarioReceptorInput = {
    id?: string
    texto: string
    fechaEnvio: Date | string
    pedido: PedidoCreateNestedOneWithoutMensajesInput
    usuarioEmisor: UsuarioCreateNestedOneWithoutMensajesEnviadosInput
  }

  export type MensajeUncheckedCreateWithoutUsuarioReceptorInput = {
    id?: string
    pedidoId: string
    usuarioEmisorId: string
    texto: string
    fechaEnvio: Date | string
  }

  export type MensajeCreateOrConnectWithoutUsuarioReceptorInput = {
    where: MensajeWhereUniqueInput
    create: XOR<MensajeCreateWithoutUsuarioReceptorInput, MensajeUncheckedCreateWithoutUsuarioReceptorInput>
  }

  export type MensajeCreateManyUsuarioReceptorInputEnvelope = {
    data: MensajeCreateManyUsuarioReceptorInput | MensajeCreateManyUsuarioReceptorInput[]
  }

  export type HistorialDireccionUpdateManyInput = {
    where: HistorialDireccionWhereInput
    data: HistorialDireccionUpdateInput
  }

  export type HistorialDireccionDeleteManyInput = {
    where: HistorialDireccionWhereInput
  }

  export type PedidoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutUsuarioInput, PedidoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<PedidoCreateWithoutUsuarioInput, PedidoUncheckedCreateWithoutUsuarioInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutUsuarioInput, PedidoUncheckedUpdateWithoutUsuarioInput>
  }

  export type PedidoUpdateManyWithWhereWithoutUsuarioInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type PedidoScalarWhereInput = {
    AND?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    OR?: PedidoScalarWhereInput[]
    NOT?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    id?: StringFilter<"Pedido"> | string
    estado?: StringFilter<"Pedido"> | string
    total?: FloatFilter<"Pedido"> | number
    usuarioId?: StringFilter<"Pedido"> | string
    direccionEntrega?: JsonFilter<"Pedido">
    repartidorId?: StringFilter<"Pedido"> | string
    fechaDeCreacion?: DateTimeFilter<"Pedido"> | Date | string
  }

  export type PedidoUpsertWithWhereUniqueWithoutRepartidorInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutRepartidorInput, PedidoUncheckedUpdateWithoutRepartidorInput>
    create: XOR<PedidoCreateWithoutRepartidorInput, PedidoUncheckedCreateWithoutRepartidorInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutRepartidorInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutRepartidorInput, PedidoUncheckedUpdateWithoutRepartidorInput>
  }

  export type PedidoUpdateManyWithWhereWithoutRepartidorInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutRepartidorInput>
  }

  export type MensajeUpsertWithWhereUniqueWithoutUsuarioEmisorInput = {
    where: MensajeWhereUniqueInput
    update: XOR<MensajeUpdateWithoutUsuarioEmisorInput, MensajeUncheckedUpdateWithoutUsuarioEmisorInput>
    create: XOR<MensajeCreateWithoutUsuarioEmisorInput, MensajeUncheckedCreateWithoutUsuarioEmisorInput>
  }

  export type MensajeUpdateWithWhereUniqueWithoutUsuarioEmisorInput = {
    where: MensajeWhereUniqueInput
    data: XOR<MensajeUpdateWithoutUsuarioEmisorInput, MensajeUncheckedUpdateWithoutUsuarioEmisorInput>
  }

  export type MensajeUpdateManyWithWhereWithoutUsuarioEmisorInput = {
    where: MensajeScalarWhereInput
    data: XOR<MensajeUpdateManyMutationInput, MensajeUncheckedUpdateManyWithoutUsuarioEmisorInput>
  }

  export type MensajeScalarWhereInput = {
    AND?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
    OR?: MensajeScalarWhereInput[]
    NOT?: MensajeScalarWhereInput | MensajeScalarWhereInput[]
    id?: StringFilter<"Mensaje"> | string
    pedidoId?: StringFilter<"Mensaje"> | string
    usuarioEmisorId?: StringFilter<"Mensaje"> | string
    usuarioReceptorId?: StringFilter<"Mensaje"> | string
    texto?: StringFilter<"Mensaje"> | string
    fechaEnvio?: DateTimeFilter<"Mensaje"> | Date | string
  }

  export type MensajeUpsertWithWhereUniqueWithoutUsuarioReceptorInput = {
    where: MensajeWhereUniqueInput
    update: XOR<MensajeUpdateWithoutUsuarioReceptorInput, MensajeUncheckedUpdateWithoutUsuarioReceptorInput>
    create: XOR<MensajeCreateWithoutUsuarioReceptorInput, MensajeUncheckedCreateWithoutUsuarioReceptorInput>
  }

  export type MensajeUpdateWithWhereUniqueWithoutUsuarioReceptorInput = {
    where: MensajeWhereUniqueInput
    data: XOR<MensajeUpdateWithoutUsuarioReceptorInput, MensajeUncheckedUpdateWithoutUsuarioReceptorInput>
  }

  export type MensajeUpdateManyWithWhereWithoutUsuarioReceptorInput = {
    where: MensajeScalarWhereInput
    data: XOR<MensajeUpdateManyMutationInput, MensajeUncheckedUpdateManyWithoutUsuarioReceptorInput>
  }

  export type UsuarioCreateWithoutPedidosClienteInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosRepartidor?: PedidoCreateNestedManyWithoutRepartidorInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutUsuarioEmisorInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutUsuarioReceptorInput
  }

  export type UsuarioUncheckedCreateWithoutPedidosClienteInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosRepartidor?: PedidoUncheckedCreateNestedManyWithoutRepartidorInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutUsuarioEmisorInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutUsuarioReceptorInput
  }

  export type UsuarioCreateOrConnectWithoutPedidosClienteInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPedidosClienteInput, UsuarioUncheckedCreateWithoutPedidosClienteInput>
  }

  export type UsuarioCreateWithoutPedidosRepartidorInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutUsuarioEmisorInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutUsuarioReceptorInput
  }

  export type UsuarioUncheckedCreateWithoutPedidosRepartidorInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutUsuarioEmisorInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutUsuarioReceptorInput
  }

  export type UsuarioCreateOrConnectWithoutPedidosRepartidorInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutPedidosRepartidorInput, UsuarioUncheckedCreateWithoutPedidosRepartidorInput>
  }

  export type MensajeCreateWithoutPedidoInput = {
    id?: string
    texto: string
    fechaEnvio: Date | string
    usuarioEmisor: UsuarioCreateNestedOneWithoutMensajesEnviadosInput
    usuarioReceptor: UsuarioCreateNestedOneWithoutMensajesRecibidosInput
  }

  export type MensajeUncheckedCreateWithoutPedidoInput = {
    id?: string
    usuarioEmisorId: string
    usuarioReceptorId: string
    texto: string
    fechaEnvio: Date | string
  }

  export type MensajeCreateOrConnectWithoutPedidoInput = {
    where: MensajeWhereUniqueInput
    create: XOR<MensajeCreateWithoutPedidoInput, MensajeUncheckedCreateWithoutPedidoInput>
  }

  export type MensajeCreateManyPedidoInputEnvelope = {
    data: MensajeCreateManyPedidoInput | MensajeCreateManyPedidoInput[]
  }

  export type CalificacionCreateWithoutPedidoInput = {
    id?: string
    calificacionRepartidor: number
    calificacionPedido: number
    comentarios?: string | null
  }

  export type CalificacionUncheckedCreateWithoutPedidoInput = {
    id?: string
    calificacionRepartidor: number
    calificacionPedido: number
    comentarios?: string | null
  }

  export type CalificacionCreateOrConnectWithoutPedidoInput = {
    where: CalificacionWhereUniqueInput
    create: XOR<CalificacionCreateWithoutPedidoInput, CalificacionUncheckedCreateWithoutPedidoInput>
  }

  export type ProductoPedidoUpdateManyInput = {
    where: ProductoPedidoWhereInput
    data: ProductoPedidoUpdateInput
  }

  export type ProductoPedidoDeleteManyInput = {
    where: ProductoPedidoWhereInput
  }

  export type UsuarioUpsertWithoutPedidosClienteInput = {
    update: XOR<UsuarioUpdateWithoutPedidosClienteInput, UsuarioUncheckedUpdateWithoutPedidosClienteInput>
    create: XOR<UsuarioCreateWithoutPedidosClienteInput, UsuarioUncheckedCreateWithoutPedidosClienteInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPedidosClienteInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPedidosClienteInput, UsuarioUncheckedUpdateWithoutPedidosClienteInput>
  }

  export type UsuarioUpdateWithoutPedidosClienteInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosRepartidor?: PedidoUpdateManyWithoutRepartidorNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutUsuarioEmisorNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutUsuarioReceptorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPedidosClienteInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosRepartidor?: PedidoUncheckedUpdateManyWithoutRepartidorNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutUsuarioEmisorNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutUsuarioReceptorNestedInput
  }

  export type UsuarioUpsertWithoutPedidosRepartidorInput = {
    update: XOR<UsuarioUpdateWithoutPedidosRepartidorInput, UsuarioUncheckedUpdateWithoutPedidosRepartidorInput>
    create: XOR<UsuarioCreateWithoutPedidosRepartidorInput, UsuarioUncheckedCreateWithoutPedidosRepartidorInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutPedidosRepartidorInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutPedidosRepartidorInput, UsuarioUncheckedUpdateWithoutPedidosRepartidorInput>
  }

  export type UsuarioUpdateWithoutPedidosRepartidorInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutUsuarioEmisorNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutUsuarioReceptorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutPedidosRepartidorInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutUsuarioEmisorNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutUsuarioReceptorNestedInput
  }

  export type MensajeUpsertWithWhereUniqueWithoutPedidoInput = {
    where: MensajeWhereUniqueInput
    update: XOR<MensajeUpdateWithoutPedidoInput, MensajeUncheckedUpdateWithoutPedidoInput>
    create: XOR<MensajeCreateWithoutPedidoInput, MensajeUncheckedCreateWithoutPedidoInput>
  }

  export type MensajeUpdateWithWhereUniqueWithoutPedidoInput = {
    where: MensajeWhereUniqueInput
    data: XOR<MensajeUpdateWithoutPedidoInput, MensajeUncheckedUpdateWithoutPedidoInput>
  }

  export type MensajeUpdateManyWithWhereWithoutPedidoInput = {
    where: MensajeScalarWhereInput
    data: XOR<MensajeUpdateManyMutationInput, MensajeUncheckedUpdateManyWithoutPedidoInput>
  }

  export type CalificacionUpsertWithoutPedidoInput = {
    update: XOR<CalificacionUpdateWithoutPedidoInput, CalificacionUncheckedUpdateWithoutPedidoInput>
    create: XOR<CalificacionCreateWithoutPedidoInput, CalificacionUncheckedCreateWithoutPedidoInput>
    where?: CalificacionWhereInput
  }

  export type CalificacionUpdateToOneWithWhereWithoutPedidoInput = {
    where?: CalificacionWhereInput
    data: XOR<CalificacionUpdateWithoutPedidoInput, CalificacionUncheckedUpdateWithoutPedidoInput>
  }

  export type CalificacionUpdateWithoutPedidoInput = {
    calificacionRepartidor?: IntFieldUpdateOperationsInput | number
    calificacionPedido?: IntFieldUpdateOperationsInput | number
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CalificacionUncheckedUpdateWithoutPedidoInput = {
    calificacionRepartidor?: IntFieldUpdateOperationsInput | number
    calificacionPedido?: IntFieldUpdateOperationsInput | number
    comentarios?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductoCreateWithoutRestauranteInput = {
    id?: string
    nombre: string
    precio: number
    especificaciones: string
  }

  export type ProductoUncheckedCreateWithoutRestauranteInput = {
    id?: string
    nombre: string
    precio: number
    especificaciones: string
  }

  export type ProductoCreateOrConnectWithoutRestauranteInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutRestauranteInput, ProductoUncheckedCreateWithoutRestauranteInput>
  }

  export type ProductoCreateManyRestauranteInputEnvelope = {
    data: ProductoCreateManyRestauranteInput | ProductoCreateManyRestauranteInput[]
  }

  export type UbicacionUpdateManyInput = {
    where: UbicacionWhereInput
    data: UbicacionUpdateInput
  }

  export type UbicacionDeleteManyInput = {
    where: UbicacionWhereInput
  }

  export type ProductoUpsertWithWhereUniqueWithoutRestauranteInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutRestauranteInput, ProductoUncheckedUpdateWithoutRestauranteInput>
    create: XOR<ProductoCreateWithoutRestauranteInput, ProductoUncheckedCreateWithoutRestauranteInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutRestauranteInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutRestauranteInput, ProductoUncheckedUpdateWithoutRestauranteInput>
  }

  export type ProductoUpdateManyWithWhereWithoutRestauranteInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutRestauranteInput>
  }

  export type ProductoScalarWhereInput = {
    AND?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    OR?: ProductoScalarWhereInput[]
    NOT?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    id?: StringFilter<"Producto"> | string
    nombre?: StringFilter<"Producto"> | string
    precio?: FloatFilter<"Producto"> | number
    especificaciones?: StringFilter<"Producto"> | string
    restauranteId?: StringFilter<"Producto"> | string
  }

  export type RestauranteCreateWithoutProductosInput = {
    id?: string
    nombre: string
    ubicaciones?: XOR<UbicacionListCreateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
  }

  export type RestauranteUncheckedCreateWithoutProductosInput = {
    id?: string
    nombre: string
    ubicaciones?: XOR<UbicacionListCreateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
  }

  export type RestauranteCreateOrConnectWithoutProductosInput = {
    where: RestauranteWhereUniqueInput
    create: XOR<RestauranteCreateWithoutProductosInput, RestauranteUncheckedCreateWithoutProductosInput>
  }

  export type RestauranteUpsertWithoutProductosInput = {
    update: XOR<RestauranteUpdateWithoutProductosInput, RestauranteUncheckedUpdateWithoutProductosInput>
    create: XOR<RestauranteCreateWithoutProductosInput, RestauranteUncheckedCreateWithoutProductosInput>
    where?: RestauranteWhereInput
  }

  export type RestauranteUpdateToOneWithWhereWithoutProductosInput = {
    where?: RestauranteWhereInput
    data: XOR<RestauranteUpdateWithoutProductosInput, RestauranteUncheckedUpdateWithoutProductosInput>
  }

  export type RestauranteUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ubicaciones?: XOR<UbicacionListUpdateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
  }

  export type RestauranteUncheckedUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ubicaciones?: XOR<UbicacionListUpdateEnvelopeInput, UbicacionCreateInput> | UbicacionCreateInput[]
  }

  export type PedidoCreateWithoutCalificacionInput = {
    id?: string
    estado: string
    total: number
    direccionEntrega: InputJsonValue
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    usuario: UsuarioCreateNestedOneWithoutPedidosClienteInput
    repartidor: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    mensajes?: MensajeCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutCalificacionInput = {
    id?: string
    estado: string
    total: number
    usuarioId: string
    direccionEntrega: InputJsonValue
    repartidorId: string
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    mensajes?: MensajeUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutCalificacionInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutCalificacionInput, PedidoUncheckedCreateWithoutCalificacionInput>
  }

  export type PedidoUpsertWithoutCalificacionInput = {
    update: XOR<PedidoUpdateWithoutCalificacionInput, PedidoUncheckedUpdateWithoutCalificacionInput>
    create: XOR<PedidoCreateWithoutCalificacionInput, PedidoUncheckedCreateWithoutCalificacionInput>
    where?: PedidoWhereInput
  }

  export type PedidoUpdateToOneWithWhereWithoutCalificacionInput = {
    where?: PedidoWhereInput
    data: XOR<PedidoUpdateWithoutCalificacionInput, PedidoUncheckedUpdateWithoutCalificacionInput>
  }

  export type PedidoUpdateWithoutCalificacionInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    direccionEntrega?: InputJsonValue | InputJsonValue
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    usuario?: UsuarioUpdateOneRequiredWithoutPedidosClienteNestedInput
    repartidor?: UsuarioUpdateOneRequiredWithoutPedidosRepartidorNestedInput
    mensajes?: MensajeUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutCalificacionInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    usuarioId?: StringFieldUpdateOperationsInput | string
    direccionEntrega?: InputJsonValue | InputJsonValue
    repartidorId?: StringFieldUpdateOperationsInput | string
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    mensajes?: MensajeUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoCreateWithoutMensajesInput = {
    id?: string
    estado: string
    total: number
    direccionEntrega: InputJsonValue
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    usuario: UsuarioCreateNestedOneWithoutPedidosClienteInput
    repartidor: UsuarioCreateNestedOneWithoutPedidosRepartidorInput
    calificacion?: CalificacionCreateNestedOneWithoutPedidoInput
  }

  export type PedidoUncheckedCreateWithoutMensajesInput = {
    id?: string
    estado: string
    total: number
    usuarioId: string
    direccionEntrega: InputJsonValue
    repartidorId: string
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    calificacion?: CalificacionUncheckedCreateNestedOneWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutMensajesInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutMensajesInput, PedidoUncheckedCreateWithoutMensajesInput>
  }

  export type UsuarioCreateWithoutMensajesEnviadosInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoCreateNestedManyWithoutUsuarioInput
    pedidosRepartidor?: PedidoCreateNestedManyWithoutRepartidorInput
    mensajesRecibidos?: MensajeCreateNestedManyWithoutUsuarioReceptorInput
  }

  export type UsuarioUncheckedCreateWithoutMensajesEnviadosInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUncheckedCreateNestedManyWithoutUsuarioInput
    pedidosRepartidor?: PedidoUncheckedCreateNestedManyWithoutRepartidorInput
    mensajesRecibidos?: MensajeUncheckedCreateNestedManyWithoutUsuarioReceptorInput
  }

  export type UsuarioCreateOrConnectWithoutMensajesEnviadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutMensajesEnviadosInput, UsuarioUncheckedCreateWithoutMensajesEnviadosInput>
  }

  export type UsuarioCreateWithoutMensajesRecibidosInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoCreateNestedManyWithoutUsuarioInput
    pedidosRepartidor?: PedidoCreateNestedManyWithoutRepartidorInput
    mensajesEnviados?: MensajeCreateNestedManyWithoutUsuarioEmisorInput
  }

  export type UsuarioUncheckedCreateWithoutMensajesRecibidosInput = {
    id?: string
    nombreCompleto: string
    contraseña: string
    rol: string
    direccion: string
    telefono: number
    cedula: number
    email: string
    vehiculo?: string | null
    resetToken?: string | null
    resetTokenExpiry?: string | null
    historialDirecciones?: XOR<HistorialDireccionListCreateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUncheckedCreateNestedManyWithoutUsuarioInput
    pedidosRepartidor?: PedidoUncheckedCreateNestedManyWithoutRepartidorInput
    mensajesEnviados?: MensajeUncheckedCreateNestedManyWithoutUsuarioEmisorInput
  }

  export type UsuarioCreateOrConnectWithoutMensajesRecibidosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutMensajesRecibidosInput, UsuarioUncheckedCreateWithoutMensajesRecibidosInput>
  }

  export type PedidoUpsertWithoutMensajesInput = {
    update: XOR<PedidoUpdateWithoutMensajesInput, PedidoUncheckedUpdateWithoutMensajesInput>
    create: XOR<PedidoCreateWithoutMensajesInput, PedidoUncheckedCreateWithoutMensajesInput>
    where?: PedidoWhereInput
  }

  export type PedidoUpdateToOneWithWhereWithoutMensajesInput = {
    where?: PedidoWhereInput
    data: XOR<PedidoUpdateWithoutMensajesInput, PedidoUncheckedUpdateWithoutMensajesInput>
  }

  export type PedidoUpdateWithoutMensajesInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    direccionEntrega?: InputJsonValue | InputJsonValue
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    usuario?: UsuarioUpdateOneRequiredWithoutPedidosClienteNestedInput
    repartidor?: UsuarioUpdateOneRequiredWithoutPedidosRepartidorNestedInput
    calificacion?: CalificacionUpdateOneWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutMensajesInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    usuarioId?: StringFieldUpdateOperationsInput | string
    direccionEntrega?: InputJsonValue | InputJsonValue
    repartidorId?: StringFieldUpdateOperationsInput | string
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    calificacion?: CalificacionUncheckedUpdateOneWithoutPedidoNestedInput
  }

  export type UsuarioUpsertWithoutMensajesEnviadosInput = {
    update: XOR<UsuarioUpdateWithoutMensajesEnviadosInput, UsuarioUncheckedUpdateWithoutMensajesEnviadosInput>
    create: XOR<UsuarioCreateWithoutMensajesEnviadosInput, UsuarioUncheckedCreateWithoutMensajesEnviadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutMensajesEnviadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutMensajesEnviadosInput, UsuarioUncheckedUpdateWithoutMensajesEnviadosInput>
  }

  export type UsuarioUpdateWithoutMensajesEnviadosInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUpdateManyWithoutUsuarioNestedInput
    pedidosRepartidor?: PedidoUpdateManyWithoutRepartidorNestedInput
    mensajesRecibidos?: MensajeUpdateManyWithoutUsuarioReceptorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutMensajesEnviadosInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUncheckedUpdateManyWithoutUsuarioNestedInput
    pedidosRepartidor?: PedidoUncheckedUpdateManyWithoutRepartidorNestedInput
    mensajesRecibidos?: MensajeUncheckedUpdateManyWithoutUsuarioReceptorNestedInput
  }

  export type UsuarioUpsertWithoutMensajesRecibidosInput = {
    update: XOR<UsuarioUpdateWithoutMensajesRecibidosInput, UsuarioUncheckedUpdateWithoutMensajesRecibidosInput>
    create: XOR<UsuarioCreateWithoutMensajesRecibidosInput, UsuarioUncheckedCreateWithoutMensajesRecibidosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutMensajesRecibidosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutMensajesRecibidosInput, UsuarioUncheckedUpdateWithoutMensajesRecibidosInput>
  }

  export type UsuarioUpdateWithoutMensajesRecibidosInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUpdateManyWithoutUsuarioNestedInput
    pedidosRepartidor?: PedidoUpdateManyWithoutRepartidorNestedInput
    mensajesEnviados?: MensajeUpdateManyWithoutUsuarioEmisorNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutMensajesRecibidosInput = {
    nombreCompleto?: StringFieldUpdateOperationsInput | string
    contraseña?: StringFieldUpdateOperationsInput | string
    rol?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    cedula?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    vehiculo?: NullableStringFieldUpdateOperationsInput | string | null
    resetToken?: NullableStringFieldUpdateOperationsInput | string | null
    resetTokenExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    historialDirecciones?: XOR<HistorialDireccionListUpdateEnvelopeInput, HistorialDireccionCreateInput> | HistorialDireccionCreateInput[]
    pedidosCliente?: PedidoUncheckedUpdateManyWithoutUsuarioNestedInput
    pedidosRepartidor?: PedidoUncheckedUpdateManyWithoutRepartidorNestedInput
    mensajesEnviados?: MensajeUncheckedUpdateManyWithoutUsuarioEmisorNestedInput
  }

  export type PedidoCreateManyUsuarioInput = {
    id?: string
    estado: string
    total: number
    direccionEntrega: InputJsonValue
    repartidorId: string
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
  }

  export type PedidoCreateManyRepartidorInput = {
    id?: string
    estado: string
    total: number
    usuarioId: string
    direccionEntrega: InputJsonValue
    fechaDeCreacion: Date | string
    productos?: XOR<ProductoPedidoListCreateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
  }

  export type MensajeCreateManyUsuarioEmisorInput = {
    id?: string
    pedidoId: string
    usuarioReceptorId: string
    texto: string
    fechaEnvio: Date | string
  }

  export type MensajeCreateManyUsuarioReceptorInput = {
    id?: string
    pedidoId: string
    usuarioEmisorId: string
    texto: string
    fechaEnvio: Date | string
  }

  export type HistorialDireccionUpdateInput = {
    comuna?: IntFieldUpdateOperationsInput | number
    barrio?: StringFieldUpdateOperationsInput | string
    direccionEspecifica?: StringFieldUpdateOperationsInput | string
  }

  export type PedidoUpdateWithoutUsuarioInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    direccionEntrega?: InputJsonValue | InputJsonValue
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    repartidor?: UsuarioUpdateOneRequiredWithoutPedidosRepartidorNestedInput
    mensajes?: MensajeUpdateManyWithoutPedidoNestedInput
    calificacion?: CalificacionUpdateOneWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutUsuarioInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    direccionEntrega?: InputJsonValue | InputJsonValue
    repartidorId?: StringFieldUpdateOperationsInput | string
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    mensajes?: MensajeUncheckedUpdateManyWithoutPedidoNestedInput
    calificacion?: CalificacionUncheckedUpdateOneWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutUsuarioInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    direccionEntrega?: InputJsonValue | InputJsonValue
    repartidorId?: StringFieldUpdateOperationsInput | string
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
  }

  export type PedidoUpdateWithoutRepartidorInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    direccionEntrega?: InputJsonValue | InputJsonValue
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    usuario?: UsuarioUpdateOneRequiredWithoutPedidosClienteNestedInput
    mensajes?: MensajeUpdateManyWithoutPedidoNestedInput
    calificacion?: CalificacionUpdateOneWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateWithoutRepartidorInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    usuarioId?: StringFieldUpdateOperationsInput | string
    direccionEntrega?: InputJsonValue | InputJsonValue
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
    mensajes?: MensajeUncheckedUpdateManyWithoutPedidoNestedInput
    calificacion?: CalificacionUncheckedUpdateOneWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutRepartidorInput = {
    estado?: StringFieldUpdateOperationsInput | string
    total?: FloatFieldUpdateOperationsInput | number
    usuarioId?: StringFieldUpdateOperationsInput | string
    direccionEntrega?: InputJsonValue | InputJsonValue
    fechaDeCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: XOR<ProductoPedidoListUpdateEnvelopeInput, ProductoPedidoCreateInput> | ProductoPedidoCreateInput[]
  }

  export type MensajeUpdateWithoutUsuarioEmisorInput = {
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    pedido?: PedidoUpdateOneRequiredWithoutMensajesNestedInput
    usuarioReceptor?: UsuarioUpdateOneRequiredWithoutMensajesRecibidosNestedInput
  }

  export type MensajeUncheckedUpdateWithoutUsuarioEmisorInput = {
    pedidoId?: StringFieldUpdateOperationsInput | string
    usuarioReceptorId?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensajeUncheckedUpdateManyWithoutUsuarioEmisorInput = {
    pedidoId?: StringFieldUpdateOperationsInput | string
    usuarioReceptorId?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensajeUpdateWithoutUsuarioReceptorInput = {
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    pedido?: PedidoUpdateOneRequiredWithoutMensajesNestedInput
    usuarioEmisor?: UsuarioUpdateOneRequiredWithoutMensajesEnviadosNestedInput
  }

  export type MensajeUncheckedUpdateWithoutUsuarioReceptorInput = {
    pedidoId?: StringFieldUpdateOperationsInput | string
    usuarioEmisorId?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensajeUncheckedUpdateManyWithoutUsuarioReceptorInput = {
    pedidoId?: StringFieldUpdateOperationsInput | string
    usuarioEmisorId?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensajeCreateManyPedidoInput = {
    id?: string
    usuarioEmisorId: string
    usuarioReceptorId: string
    texto: string
    fechaEnvio: Date | string
  }

  export type ProductoPedidoUpdateInput = {
    productoId?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type MensajeUpdateWithoutPedidoInput = {
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioEmisor?: UsuarioUpdateOneRequiredWithoutMensajesEnviadosNestedInput
    usuarioReceptor?: UsuarioUpdateOneRequiredWithoutMensajesRecibidosNestedInput
  }

  export type MensajeUncheckedUpdateWithoutPedidoInput = {
    usuarioEmisorId?: StringFieldUpdateOperationsInput | string
    usuarioReceptorId?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensajeUncheckedUpdateManyWithoutPedidoInput = {
    usuarioEmisorId?: StringFieldUpdateOperationsInput | string
    usuarioReceptorId?: StringFieldUpdateOperationsInput | string
    texto?: StringFieldUpdateOperationsInput | string
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductoCreateManyRestauranteInput = {
    id?: string
    nombre: string
    precio: number
    especificaciones: string
  }

  export type UbicacionUpdateInput = {
    sucursalId?: StringFieldUpdateOperationsInput | string
    comuna?: StringFieldUpdateOperationsInput | string
  }

  export type ProductoUpdateWithoutRestauranteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    especificaciones?: StringFieldUpdateOperationsInput | string
  }

  export type ProductoUncheckedUpdateWithoutRestauranteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    especificaciones?: StringFieldUpdateOperationsInput | string
  }

  export type ProductoUncheckedUpdateManyWithoutRestauranteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precio?: FloatFieldUpdateOperationsInput | number
    especificaciones?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}